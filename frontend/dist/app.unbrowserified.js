// Generated by psc-bundle 0.10.7
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["functorFn"] = functorFn;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["Discard"] = Discard;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (Monad0, liftEff) {
      this.Monad0 = Monad0;
      this.liftEff = liftEff;
  };                                                   
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["unsafeCoerceEff"] = $foreign.unsafeCoerceEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };                                    
  var eqInt = new Eq($foreign.refEq); 
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  }; 
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                         
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, Data_Function["const"](mempty(dictMonoid)));
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidFn"] = monoidFn;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 220, column 1 - line 220, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                      
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 69, column 3 - line 69, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 128, column 3 - line 128, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var under = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($55) {
                      return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
                  };
              };
          };
      };
  };
  exports["Newtype"] = Newtype;
  exports["under"] = under;
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($181) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($181));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 133, column 3 - line 133, column 30: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 131, column 3 - line 131, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 3 - line 129, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["traverse_"] = traverse_;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 37, column 3 - line 37, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 230, column 1 - line 230, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 44, column 3 - line 44, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 80, column 3 - line 80, column 28: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  }; 
  var forever = function (dictMonadRec) {
      return function (ma) {
          return tailRecM(dictMonadRec)(function (u) {
              return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
          })(Data_Unit.unit);
      };
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["forever"] = forever;
  exports["tailRecM"] = tailRecM;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Prelude = PS["Prelude"];        
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["MonadTrans"] = MonadTrans;
  exports["lift"] = lift;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($104) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 59, column 3 - line 59, column 69: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 53, column 20 - line 55, column 67: " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 51, column 5 - line 56, column 98: " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 49, column 3 - line 49, column 35: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var monadEffFreeT = function (dictFunctor) {
      return function (dictMonadEff) {
          return new Control_Monad_Eff_Class.MonadEff(function () {
              return monadFreeT(dictFunctor)(dictMonadEff.Monad0());
          }, function ($108) {
              return Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($108));
          });
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 81, column 15 - line 83, column 25: " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
  exports["monadEffFreeT"] = monadEffFreeT;
})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };                                                           
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["Parallel"] = Parallel;
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
      };
  };
  exports["Profunctor"] = Profunctor;
  exports["dimap"] = dimap;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Tuple(f(v.value0), g(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["functorTuple"] = functorTuple;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var CoTransform = (function () {
      function CoTransform(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoTransform.create = function (value0) {
          return function (value1) {
              return new CoTransform(value0, value1);
          };
      };
      return CoTransform;
  })();
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                          if (v1 instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
                                          };
                                          if (v1 instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v2) {
                                                      return go(t);
                                                  });
                                              })(v1.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine line 80, column 5 - line 82, column 63: " + [ v1.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return function ($187) {
                  return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($187));
              };
          };
      };
  });
  var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
  var transform = function (dictMonad) {
      return function (f) {
          return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
              return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
          });
      };
  };
  var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new CoTransform(f(v.value0), function ($188) {
                  return g(v.value1($188));
              });
          };
      };
  });
  var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
  var cotransform = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.freeT(function (v) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
          });
      };
  };
  var transformCoTransformL = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return new CoTransform(v1.value0, function (i1) {
                          var v2 = v(i1);
                          return f(v2.value1)(v1.value1(v2.value0));
                      });
                  };
              };
          });
      };
  };
  var transformCoTransformR = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      var v2 = v1(v.value0);
                      return new CoTransform(v2.value0, function ($189) {
                          return (function (v3) {
                              return f(v3)(v2.value1);
                          })(v.value1($189));
                      });
                  };
              };
          });
      };
  };
  exports["CoTransform"] = CoTransform;
  exports["cotransform"] = cotransform;
  exports["fuseWith"] = fuseWith;
  exports["transform"] = transform;
  exports["transformCoTransformL"] = transformCoTransformL;
  exports["transformCoTransformR"] = transformCoTransformR;
  exports["bifunctorTransform"] = bifunctorTransform;
  exports["functorTransform"] = functorTransform;
  exports["bifunctorCoTransform"] = bifunctorCoTransform;
  exports["functorCoTransform"] = functorCoTransform;
})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
(function(exports) {
  /* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
  "use strict";

  exports._cancelWith = function (nonCanceler, aff, canceler1) {
    return function (success, error) {
      var canceler2 = aff(success, error);

      return function (e) {
        return function (success, error) {
          var cancellations = 0;
          var result = false;
          var errored = false;

          var s = function (bool) {
            cancellations = cancellations + 1;
            result = result || bool;

            if (cancellations === 2 && !errored) {
              success(result);
            }
          };

          var f = function (err) {
            if (!errored) {
              errored = true;
              error(err);
            }
          };

          canceler2(e)(s, f);
          canceler1(e)(s, f);

          return nonCanceler;
        };
      };
    };
  };

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  };

  exports._forkAff = function (nonCanceler, aff) {
    var voidF = function () {};

    return function (success) {
      var canceler = aff(voidF, voidF);
      success(canceler);
      return nonCanceler;
    };
  };

  exports._makeAff = function (cb) {
    return function (success, error) {
      try {
        return cb(function (e) {
          return function () {
            error(e);
          };
        })(function (v) {
          return function () {
            success(v);
          };
        })();
      } catch (err) {
        error(err);
      }
    };
  };

  exports._pure = function (nonCanceler, v) {
    return function (success) {
      success(v);
      return nonCanceler;
    };
  };

  exports._fmap = function (f, aff) {
    return function (success, error) {
      return aff(function (v) {
        success(f(v));
      }, error);
    };
  };

  exports._bind = function (alwaysCanceler, aff, f) {
    return function (success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function () {};

      canceler1 = aff(function (v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function (e) {
        return function (s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function (bool) {
              if (bool || isCanceled) {
                s(true);
              } else {
                onCanceler = function (canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  };

  exports._attempt = function (Left, Right, aff) {
    return function (success) {
      return aff(function (v) {
        success(Right(v));
      }, function (e) {
        success(Left(e));
      });
    };
  };

  exports._runAff = function (errorT, successT, aff) {
    // If errorT or successT throw, and an Aff is comprised only of synchronous
    // effects, then it's possible for makeAff/liftEff to accidentally catch
    // it, which may end up rerunning the Aff depending on error recovery
    // behavior. To mitigate this, we observe synchronicity using mutation. If
    // an Aff is observed to be synchronous, we let the stack reset and run the
    // handlers outside of the normal callback flow.
    return function () {
      var status = 0;
      var result, success;

      var canceler = aff(function (v) {
        if (status === 2) {
          successT(v)();
        } else {
          status = 1;
          result = v;
          success = true;
        }
      }, function (e) {
        if (status === 2) {
          errorT(e)();
        } else {
          status = 1;
          result = e;
          success = false;
        }
      });

      if (status === 1) {
        if (success) {
          successT(result)();
        } else {
          errorT(result)();
        }
      } else {
        status = 2;
      }

      return canceler;
    };
  };

  exports._liftEff = function (nonCanceler, e) {
    return function (success, error) {
      var result;
      try {
        result = e();
      } catch (err) {
        error(err);
        return nonCanceler;
      }

      success(result);
      return nonCanceler;
    };
  };

  exports._tailRecM = function (isLeft, f, a) {
    return function (success, error) {
      return function go (acc) {
        var result, status, canceler;

        // Observes synchronous effects using a flag.
        //   status = 0 (unresolved status)
        //   status = 1 (synchronous effect)
        //   status = 2 (asynchronous effect)

        var csuccess = function (v) {
          // If the status is still unresolved, we have observed a
          // synchronous effect. Otherwise, the status will be `2`.
          if (status === 0) {
            // Store the result for further synchronous processing.
            result = v;
            status = 1;
          } else {
            // When we have observed an asynchronous effect, we use normal
            // recursion. This is safe because we will be on a new stack.
            if (isLeft(v)) {
              go(v.value0);
            } else {
              success(v.value0);
            }
          }
        };

        while (true) {
          status = 0;
          canceler = f(acc)(csuccess, error);

          // If the status has already resolved to `1` by our Aff handler, then
          // we have observed a synchronous effect. Otherwise it will still be
          // `0`.
          if (status === 1) {
            // When we have observed a synchronous effect, we merely swap out the
            // accumulator and continue the loop, preserving stack.
            if (isLeft(result)) {
              acc = result.value0;
              continue;
            } else {
              success(result.value0);
            }
          } else {
            // If the status has not resolved yet, then we have observed an
            // asynchronous effect.
            status = 2;
          }
          return canceler;
        }

      }(a);
    };
  };
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  exports._makeVar = function (nonCanceler) {
    return function (success) {
      success({
        consumers: [],
        producers: [],
        error: undefined
      });
      return nonCanceler;
    };
  };

  exports._takeVar = function (nonCanceler, avar) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.producers.length > 0) {
        avar.producers.shift()(success, error);
      } else {
        avar.consumers.push({ peek: false, success: success, error: error });
      }

      return nonCanceler;
    };
  };

  exports._putVar = function (nonCanceler, avar, a) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        var shouldQueue = true;
        var consumers = [];
        var consumer;

        while (true) {
          consumer = avar.consumers.shift();
          if (consumer) {
            consumers.push(consumer);
            if (consumer.peek) {
              continue;
            } else {
              shouldQueue = false;
            }
          }
          break;
        }

        if (shouldQueue) {
          avar.producers.push(function (success) {
            success(a);
            return nonCanceler;
          });
        }

        for (var i = 0; i < consumers.length; i++) {
          consumers[i].success(a);
        }

        success({});
      }

      return nonCanceler;
    };
  };

  exports._killVar = function (nonCanceler, avar, e) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        avar.error = e;
        while (avar.consumers.length) {
          avar.consumers.shift().error(e);
        }
        success({});
      }

      return nonCanceler;
    };
  };
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
    "use strict";

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  exports["_killVar"] = $foreign._killVar;
  exports["_makeVar"] = $foreign._makeVar;
  exports["_putVar"] = $foreign._putVar;
  exports["_takeVar"] = $foreign._takeVar;
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ParAff = function (x) {
      return x;
  };
  var Canceler = function (x) {
      return x;
  };
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };         
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var functorAff = new Data_Functor.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var functorParAff = functorAff;
  var fromAVBox = Unsafe_Coerce.unsafeCoerce;
  var cancel = function (v) {
      return v;
  };
  var launchAff = (function () {
      var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($54) {
          return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($54)));
      });
      return function ($55) {
          return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($55)));
      };
  })();
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Data_Functor.map(functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
  var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
  var cancelWith = function (aff) {
      return function (c) {
          return $foreign._cancelWith(nonCanceler, aff, c);
      };
  };
  var forkAff = function (aff) {
      return $foreign._forkAff(nonCanceler, aff);
  };
  var killVar = function (q) {
      return function (e) {
          return fromAVBox(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
      };
  };
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
          };
      });
  };
  var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(nonCanceler));
  var putVar = function (q) {
      return function (a) {
          return fromAVBox(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
      };
  };
  var takeVar = function (q) {
      return fromAVBox(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
  };
  var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return function (e) {
              return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
          };
      };
  });                                                                        
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, function (v) {
      return function (v1) {
          var putOrKill = function (v2) {
              return Data_Either.either(killVar(v2))(putVar(v2));
          };
          return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
              return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                  return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v2))(attempt(v))))(function (v4) {
                      return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v3))(attempt(v1))))(function (v5) {
                          return cancelWith(Control_Apply.apply(applyAff)(takeVar(v2))(takeVar(v3)))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                      });
                  });
              });
          });
      };
  });
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($56) {
      return ParAff(Control_Applicative.pure(applicativeAff)($56));
  });
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (f) {
      return function (a) {
          var isLoop = function (v) {
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return true;
              };
              return false;
          };
          return $foreign._tailRecM(isLoop, f, a);
      };
  });
  var parallelParAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, ParAff, function (v) {
      return v;
  });
  exports["Canceler"] = Canceler;
  exports["ParAff"] = ParAff;
  exports["attempt"] = attempt;
  exports["cancel"] = cancel;
  exports["cancelWith"] = cancelWith;
  exports["forkAff"] = forkAff;
  exports["launchAff"] = launchAff;
  exports["makeAff"] = makeAff;
  exports["nonCanceler"] = nonCanceler;
  exports["runAff"] = runAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
  exports["monadRecAff"] = monadRecAff;
  exports["semigroupCanceler"] = semigroupCanceler;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelParAff"] = parallelParAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function getProps(this_) {
    return function(){
      return this_.props;
    };
  }
  exports.getProps = getProps;

  function getRefs(this_) {
    return function(){
      return this_.refs;
    };
  }                         

  function childrenToArray(children) {
    var result = [];

    React.Children.forEach(children, function(child){
      result.push(child);
    });

    return result;
  }                                         

  function getChildren(this_) {
    return function(){
      var children = this_.props.children;

      var result = childrenToArray(children);

      return result;
    };
  }
  exports.getChildren = getChildren;

  function writeState(this_) {
    return function(state){
      return function(){
        this_.setState({
          state: state
        });
        return state;
      };
    };
  }                               

  function writeStateWithCallback(this_, cb) {
    return function(state){
      return function(cb){
        return function() {
          this_.setState({
            state: state
          }, cb);
          return state;
        };
      };
    };
  }
  exports.writeStateWithCallback = writeStateWithCallback;

  function readState(this_) {
    return function(){
      return this_.state.state;
    };
  }
  exports.readState = readState;

  function transformState(this_){
    return function(update){
      return function(){
        this_.setState(function(old, props){
          return {state: update(old.state)};
        });
      };
    };
  }                                       

  function createClass(spec) {
    var result = {
      displayName: spec.displayName,
      render: function(){
        return spec.render(this)();
      },
      getInitialState: function(){
        return {
          state: spec.getInitialState(this)()
        };
      },
      componentWillMount: function(){
        return spec.componentWillMount(this)();
      },
      componentDidMount: function(){
        return spec.componentDidMount(this)();
      },
      componentWillReceiveProps: function(nextProps){
        return spec.componentWillReceiveProps(this)(nextProps)();
      },
      shouldComponentUpdate: function(nextProps, nextState){
        return spec.shouldComponentUpdate(this)(nextProps)(nextState.state)();
      },
      componentWillUpdate: function(nextProps, nextState){
        return spec.componentWillUpdate(this)(nextProps)(nextState.state)();
      },
      componentDidUpdate: function(prevProps, prevState){
        return spec.componentDidUpdate(this)(prevProps)(prevState.state)();
      },
      componentWillUnmount: function(){
        return spec.componentWillUnmount(this)();
      }
    };

    return React.createClass(result);
  }
  exports.createClass = createClass;

  function handle(f) {
    return function(e){
      return f(e)();
    };
  };
  exports.handle = handle;

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }
  exports.createElement = createElement;
  exports.createElementTagName = createElement;

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };
  exports.createElementDynamic = createElementDynamic;
  exports.createElementTagNameDynamic = createElementDynamic;

  function createFactory(class_) {
    return React.createFactory(class_);
  }
  exports.createFactory = createFactory;

  function preventDefault(event) {
    return function() { return event.preventDefault();}
  };                                      

  function stopPropagation(event) {
    return function() { return event.stopPropagation();}
  };
})(PS["React"] = PS["React"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["React"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var spec$prime = function (getInitialState) {
      return function (renderFn) {
          return {
              render: renderFn, 
              displayName: "", 
              getInitialState: getInitialState, 
              componentWillMount: function (v) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              }, 
              componentDidMount: function (v) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              }, 
              componentWillReceiveProps: function (v) {
                  return function (v1) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                  };
              }, 
              shouldComponentUpdate: function (v) {
                  return function (v1) {
                      return function (v2) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(true);
                      };
                  };
              }, 
              componentWillUpdate: function (v) {
                  return function (v1) {
                      return function (v2) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                  };
              }, 
              componentDidUpdate: function (v) {
                  return function (v1) {
                      return function (v2) {
                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                      };
                  };
              }, 
              componentWillUnmount: function (v) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              }
          };
      };
  };
  var spec = function (state) {
      return spec$prime(function (v) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(state);
      });
  };
  exports["spec"] = spec;
  exports["createClass"] = $foreign.createClass;
  exports["createElementTagName"] = $foreign.createElementTagName;
  exports["createElementTagNameDynamic"] = $foreign.createElementTagNameDynamic;
  exports["createFactory"] = $foreign.createFactory;
  exports["getChildren"] = $foreign.getChildren;
  exports["getProps"] = $foreign.getProps;
  exports["handle"] = $foreign.handle;
  exports["readState"] = $foreign.readState;
  exports["writeStateWithCallback"] = $foreign.writeStateWithCallback;
})(PS["React"] = PS["React"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function unsafeMkProps(key) {
    return function(value){
      var result = {};
      result[key] = value;
      return result;
    };
  }
  exports.unsafeMkProps = unsafeMkProps;

  function unsafeUnfoldProps(key) {
    return function(value){
      var result = {};
      var props = {};
      props[key] = result;

      for (var subprop in value) {
        if (value.hasOwnProperty(subprop)) {
          result[subprop] = value[subprop];
        }
      }

      return props;
    };
  }
  exports.unsafeUnfoldProps = unsafeUnfoldProps;

  function unsafePrefixProps(prefix) {
    return function(value){
      var result = {};

      for (var prop in value) {
        if (value.hasOwnProperty(prop)) {
          result[prefix + prop] = value[prop];
        }
      }

      return result;
    };
  }                                             

  function unsafeFromPropsArray(props) {
    var result = {};

    for (var i = 0, len = props.length; i < len; i++) {
      var prop = props[i];

      for (var key in prop) {
        if (prop.hasOwnProperty(key)) {
          result[key] = prop[key];
        }
      }
    }

    return result;
  };
  exports.unsafeFromPropsArray = unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["React.DOM.Props"];
  var React = PS["React"];                    
  var value = $foreign.unsafeMkProps("value");    
  var style = $foreign.unsafeUnfoldProps("style");
  var step = $foreign.unsafeMkProps("step");    
  var placeholder = $foreign.unsafeMkProps("placeholder");
  var onClick = function (f) {
      return $foreign.unsafeMkProps("onClick")(React.handle(f));
  };
  var onChange = function (f) {
      return $foreign.unsafeMkProps("onChange")(React.handle(f));
  };                                                  
  var min = $foreign.unsafeMkProps("min");        
  var className = $foreign.unsafeMkProps("className");
  var checked = $foreign.unsafeMkProps("checked");
  var _type = $foreign.unsafeMkProps("type");
  var _id = $foreign.unsafeMkProps("id");
  exports["_id"] = _id;
  exports["_type"] = _type;
  exports["checked"] = checked;
  exports["className"] = className;
  exports["min"] = min;
  exports["onChange"] = onChange;
  exports["onClick"] = onClick;
  exports["placeholder"] = placeholder;
  exports["step"] = step;
  exports["style"] = style;
  exports["value"] = value;
  exports["unsafeFromPropsArray"] = $foreign.unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var React = PS["React"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var text = Unsafe_Coerce.unsafeCoerce;
  var mkDOM = function (dynamic) {
      return function (tag) {
          return function (props) {
              var createElement = (function () {
                  if (!dynamic) {
                      return React.createElementTagName;
                  };
                  if (dynamic) {
                      return React.createElementTagNameDynamic;
                  };
                  throw new Error("Failed pattern match at React.DOM line 15, column 5 - line 17, column 55: " + [ dynamic.constructor.name ]);
              })();
              return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
          };
      };
  };                              
  var label = mkDOM(false)("label");
  var input = mkDOM(false)("input");
  var i = mkDOM(false)("i");
  var h5 = mkDOM(false)("h5");
  var h4 = mkDOM(false)("h4");
  var h2 = mkDOM(false)("h2");
  var h1 = mkDOM(false)("h1");
  var div = mkDOM(false)("div");
  var div$prime = div([  ]);      
  var button = mkDOM(false)("button");
  var a = mkDOM(false)("a");
  exports["a"] = a;
  exports["button"] = button;
  exports["div"] = div;
  exports["div'"] = div$prime;
  exports["h1"] = h1;
  exports["h2"] = h2;
  exports["h4"] = h4;
  exports["h5"] = h5;
  exports["i"] = i;
  exports["input"] = input;
  exports["label"] = label;
  exports["mkDOM"] = mkDOM;
  exports["text"] = text;
})(PS["React.DOM"] = PS["React.DOM"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  var ReactDOM =require("react-dom");
  var ReactDOMServer =require("react-dom/server"); 

  exports.renderImpl = function (nothing, just, element, container) {
    var result = ReactDOM.render(element, container);
    return result === null ? nothing : just(result);
  };
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function(exports) {
    "use strict";

  exports.runEffFn4 = function runEffFn4(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function() {
              return fn(a, b, c, d);
            };
          };
        };
      };
    };
  };
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runEffFn4"] = $foreign.runEffFn4;
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["ReactDOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var React = PS["React"];                                                                     
  var render = Control_Monad_Eff_Uncurried.runEffFn4($foreign.renderImpl)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  exports["render"] = render;
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                  
  var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
  exports["htmlElementToElement"] = htmlElementToElement;
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports._body = function (doc) {
    return function () {
      return doc.body;
    };
  };
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
    "use strict";        

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                                          
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["DOM.HTML.Document"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];        
  var body = function ($0) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign._body($0));
  };
  exports["body"] = body;
})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_WebStorage_Types = PS["DOM.WebStorage.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["document"] = $foreign.document;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Prelude = PS["Prelude"];        
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  var choiceFn = new Choice(function () {
      return Data_Profunctor.profunctorFn;
  }, function (v) {
      return function (v1) {
          if (v1 instanceof Data_Either.Left) {
              return Data_Either.Left.create(v(v1.value0));
          };
          if (v1 instanceof Data_Either.Right) {
              return new Data_Either.Right(v1.value0);
          };
          throw new Error("Failed pattern match at Data.Profunctor.Choice line 33, column 3 - line 33, column 36: " + [ v.constructor.name, v1.constructor.name ]);
      };
  }, Data_Functor.map(Data_Either.functorEither));
  exports["Choice"] = Choice;
  exports["left"] = left;
  exports["right"] = right;
  exports["choiceFn"] = choiceFn;
})(PS["Data.Profunctor.Choice"] = PS["Data.Profunctor.Choice"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["Strong"] = Strong;
  exports["first"] = first;
  exports["second"] = second;
  exports["strongFn"] = strongFn;
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Cochoice = PS["Data.Profunctor.Cochoice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($25) {
                  return v1(f($25));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($26) {
          return v(Data_Tuple.fst($26));
      };
  }, function (v) {
      return function ($27) {
          return v(Data_Tuple.snd($27));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["choiceForget"] = choiceForget;
  exports["strongForget"] = strongForget;
})(PS["Data.Lens.Internal.Forget"] = PS["Data.Lens.Internal.Forget"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
  var preview = function (p) {
      return function ($62) {
          return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($63) {
              return Data_Maybe_First.First(Data_Maybe.Just.create($63));
          })($62));
      };
  };
  exports["foldMapOf"] = foldMapOf;
  exports["preview"] = preview;
})(PS["Data.Lens.Fold"] = PS["Data.Lens.Fold"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var view = function (l) {
      return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.id(Control_Category.categoryFn)));
  };
  var viewOn = function (s) {
      return function (l) {
          return view(l)(s);
      };
  };
  exports["view"] = view;
  exports["viewOn"] = viewOn;
})(PS["Data.Lens.Getter"] = PS["Data.Lens.Getter"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Prelude = PS["Prelude"];        
  var Market = (function () {
      function Market(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Market.create = function (value0) {
          return function (value1) {
              return new Market(value0, value1);
          };
      };
      return Market;
  })();
  var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Market(function ($19) {
                  return g(v.value0($19));
              }, function ($20) {
                  return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(g)(v.value1(f($20)));
              });
          };
      };
  });
  var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
      return profunctorMarket;
  }, function (v) {
      return new Market(function ($23) {
          return Data_Either.Left.create(v.value0($23));
      }, Data_Either.either(function ($24) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Left.create)(v.value1($24));
      })(function ($25) {
          return Data_Either.Left.create(Data_Either.Right.create($25));
      }));
  }, function (v) {
      return new Market(function ($26) {
          return Data_Either.Right.create(v.value0($26));
      }, Data_Either.either(function ($27) {
          return Data_Either.Left.create(Data_Either.Left.create($27));
      })(function ($28) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Either.Right.create)(v.value1($28));
      }));
  });
  exports["Market"] = Market;
  exports["profunctorMarket"] = profunctorMarket;
  exports["choiceMarket"] = choiceMarket;
})(PS["Data.Lens.Internal.Market"] = PS["Data.Lens.Internal.Market"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Costrong = PS["Data.Profunctor.Costrong"];
  var Data_Tuple = PS["Data.Tuple"];        
  var Tagged = function (x) {
      return x;
  };
  var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
      return function (g) {
          return function (v1) {
              return g(v1);
          };
      };
  });
  var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
      return taggedProfunctor;
  }, function (v) {
      return new Data_Either.Left(v);
  }, function (v) {
      return new Data_Either.Right(v);
  });
  var newtypeTagged = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Tagged);
  exports["Tagged"] = Tagged;
  exports["newtypeTagged"] = newtypeTagged;
  exports["taggedProfunctor"] = taggedProfunctor;
  exports["taggedChoice"] = taggedChoice;
})(PS["Data.Lens.Internal.Tagged"] = PS["Data.Lens.Internal.Tagged"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Internal_Shop = PS["Data.Lens.Internal.Shop"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS["Data.Lens.Lens"] = PS["Data.Lens.Lens"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Prelude = PS["Prelude"];        
  var withPrism = function (l) {
      return function (f) {
          var v = l(new Data_Lens_Internal_Market.Market(Control_Category.id(Control_Category.categoryFn), Data_Either.Right.create));
          return f(v.value0)(v.value1);
      };
  };
  var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(dictChoice);
          };
      };
  };
  var matching = function (l) {
      return withPrism(l)(function (v) {
          return function (f) {
              return f;
          };
      });
  };
  var clonePrism = function (l) {
      return function (dictChoice) {
          return withPrism(l)(function (x) {
              return function (y) {
                  return function (p) {
                      return prism(x)(y)(dictChoice)(p);
                  };
              };
          });
      };
  };
  exports["clonePrism"] = clonePrism;
  exports["matching"] = matching;
  exports["prism"] = prism;
  exports["prism'"] = prism$prime;
  exports["review"] = review;
  exports["withPrism"] = withPrism;
})(PS["Data.Lens.Prism"] = PS["Data.Lens.Prism"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var over = function (l) {
      return l;
  };
  exports["over"] = over;
})(PS["Data.Lens.Setter"] = PS["Data.Lens.Setter"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Document = PS["DOM.HTML.Document"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var ReactDOM = PS["ReactDOM"];
  var split = function (prism) {
      return function (v) {
          var render = function (k) {
              return function (p) {
                  return function (st) {
                      return function (children) {
                          var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(st);
                          if (v1 instanceof Data_Either.Left) {
                              return [  ];
                          };
                          if (v1 instanceof Data_Either.Right) {
                              return v.render(k)(p)(v1.value0)(children);
                          };
                          throw new Error("Failed pattern match at Thermite line 372, column 7 - line 374, column 50: " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          var performAction = function (a) {
              return function (p) {
                  return function (st) {
                      var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(st);
                      if (v1 instanceof Data_Either.Left) {
                          return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                      };
                      if (v1 instanceof Data_Either.Right) {
                          return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelParAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelParAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(function (v2) {
                              return Control_Bind.bind(Data_Maybe.bindMaybe)(v2)(Data_Lens_Fold.preview(prism(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))));
                          })))(v.performAction(a)(p)(v1.value0)))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Lens_Setter.over(prism(Data_Profunctor_Choice.choiceFn)))));
                      };
                      throw new Error("Failed pattern match at Thermite line 364, column 7 - line 368, column 78: " + [ v1.constructor.name ]);
                  };
              };
          };
          return {
              performAction: performAction, 
              render: render
          };
      };
  };
  var simpleSpec = function (performAction) {
      return function (render) {
          return {
              performAction: performAction, 
              render: render
          };
      };
  };
  var semigroupSpec = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return {
              performAction: function (a) {
                  return function (p) {
                      return function (s) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(v.performAction(a)(p)(s))(function () {
                              return v1.performAction(a)(p)(s);
                          });
                      };
                  };
              }, 
              render: function (k) {
                  return function (p) {
                      return function (s) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupFn(Data_Semigroup.semigroupArray))(v.render(k)(p)(s))(v1.render(k)(p)(s));
                      };
                  };
              }
          };
      };
  });
  var focus = function (lens) {
      return function (prism) {
          return function (v) {
              var render = function (k) {
                  return function (p) {
                      return function (st) {
                          return v.render(function ($107) {
                              return k(Data_Lens_Prism.review(prism(Data_Lens_Internal_Tagged.taggedChoice))($107));
                          })(p)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(st));
                      };
                  };
              };
              var performAction = function (a) {
                  return function (p) {
                      return function (st) {
                          var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(a);
                          if (v1 instanceof Data_Either.Left) {
                              return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                          };
                          if (v1 instanceof Data_Either.Right) {
                              return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelParAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelParAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))))))(v.performAction(v1.value0)(p)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(st))))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Lens_Setter.over(lens(Data_Profunctor_Strong.strongFn)))));
                          };
                          throw new Error("Failed pattern match at Thermite line 328, column 7 - line 332, column 76: " + [ v1.constructor.name ]);
                      };
                  };
              };
              return {
                  performAction: performAction, 
                  render: render
              };
          };
      };
  };
  var match = function (prism) {
      return focus(function (dictStrong) {
          return Control_Category.id(Control_Category.categoryFn);
      })(function (dictChoice) {
          return prism(dictChoice);
      });
  };
  var createReactSpec$prime = function (wrap) {
      return function (v) {
          var dispatcher = function ($$this) {
              return function (action) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                      var v1 = React.getProps($$this)();
                      var v2 = React.readState($$this)();
                      var cotransformer = v.performAction(action)(v1)(v2);
                      var step = function (cot) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free_Trans.resume(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadRecAff)(cot))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Done(Data_Unit.unit));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(React.readState($$this))))(function (v4) {
                                      var newState = v3.value0.value0(v4);
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.makeAff(function (v5) {
                                          return function (k1) {
                                              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Data_Functor["void"](Control_Monad_Eff.functorEff)(React.writeStateWithCallback($$this)(newState)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(k1(newState)))));
                                          };
                                      }))(function (v5) {
                                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Loop(v3.value0.value1(new Data_Maybe.Just(newState))));
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Thermite line 251, column 13 - line 258, column 48: " + [ v3.constructor.name ]);
                          });
                      };
                      return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Aff.launchAff(Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(step)(cotransformer)))();
                  });
              };
          };
          var render = function ($$this) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(wrap)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(v.render(dispatcher($$this)))(React.getProps($$this)))(React.readState($$this)))(React.getChildren($$this)));
          };
          return function (state) {
              return {
                  spec: React.spec(state)(render), 
                  dispatcher: dispatcher
              };
          };
      };
  };
  var createReactSpec = createReactSpec$prime(React_DOM["div'"]);
  var createClass = function (spec) {
      return function (state) {
          return React.createClass((function (v) {
              return v.spec;
          })(createReactSpec(spec)(state)));
      };
  };
  var defaultMain = function (spec) {
      return function (initialState) {
          return function (props) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)((function () {
                  var component = createClass(spec)(initialState);
                  return function __do() {
                      var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
                      var v1 = DOM_HTML_Document.body(v)();
                      return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($108) {
                          return ReactDOM.render(React.createFactory(component)(props))(DOM_HTML_Types.htmlElementToElement($108));
                      })(v1)();
                  };
              })());
          };
      };
  };
  var _render = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.render;
      })(function (v) {
          return function (r) {
              var $98 = {};
              for (var $99 in v) {
                  if ({}.hasOwnProperty.call(v, $99)) {
                      $98[$99] = v[$99];
                  };
              };
              $98.render = r;
              return $98;
          };
      })(dictStrong);
  };
  var _performAction = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.performAction;
      })(function (v) {
          return function (pa) {
              var $103 = {};
              for (var $104 in v) {
                  if ({}.hasOwnProperty.call(v, $104)) {
                      $103[$104] = v[$104];
                  };
              };
              $103.performAction = pa;
              return $103;
          };
      })(dictStrong);
  };
  exports["_performAction"] = _performAction;
  exports["_render"] = _render;
  exports["createClass"] = createClass;
  exports["createReactSpec"] = createReactSpec;
  exports["defaultMain"] = defaultMain;
  exports["focus"] = focus;
  exports["match"] = match;
  exports["simpleSpec"] = simpleSpec;
  exports["split"] = split;
  exports["semigroupSpec"] = semigroupSpec;
})(PS["Thermite"] = PS["Thermite"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];        
  var State = (function () {
      function State() {

      };
      State.value = new State();
      return State;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.text("Explorer") ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = State.value;
  exports["State"] = State;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Content.Explorer"] = PS["Content.Explorer"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];        
  var State = (function () {
      function State() {

      };
      State.value = new State();
      return State;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.text("Mining") ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = State.value;
  exports["State"] = State;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Content.Mining"] = PS["Content.Mining"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
    "use strict";

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ChangePath = (function () {
      function ChangePath(value0) {
          this.value0 = value0;
      };
      ChangePath.create = function (value0) {
          return new ChangePath(value0);
      };
      return ChangePath;
  })();
  var ChangeOn = (function () {
      function ChangeOn(value0) {
          this.value0 = value0;
      };
      ChangeOn.create = function (value0) {
          return new ChangeOn(value0);
      };
      return ChangeOn;
  })();
  var ChangeLogPath = (function () {
      function ChangeLogPath(value0) {
          this.value0 = value0;
      };
      ChangeLogPath.create = function (value0) {
          return new ChangeLogPath(value0);
      };
      return ChangeLogPath;
  })();
  var ChangeDataDirPath = (function () {
      function ChangeDataDirPath(value0) {
          this.value0 = value0;
      };
      ChangeDataDirPath.create = function (value0) {
          return new ChangeDataDirPath(value0);
      };
      return ChangeDataDirPath;
  })();
  var ChangeMaxConcurrency = (function () {
      function ChangeMaxConcurrency(value0) {
          this.value0 = value0;
      };
      ChangeMaxConcurrency.create = function (value0) {
          return new ChangeMaxConcurrency(value0);
      };
      return ChangeMaxConcurrency;
  })();
  var ChangeEnforceDnsCheckpointing = (function () {
      function ChangeEnforceDnsCheckpointing(value0) {
          this.value0 = value0;
      };
      ChangeEnforceDnsCheckpointing.create = function (value0) {
          return new ChangeEnforceDnsCheckpointing(value0);
      };
      return ChangeEnforceDnsCheckpointing;
  })();
  var ChangeLimitRateUp = (function () {
      function ChangeLimitRateUp(value0) {
          this.value0 = value0;
      };
      ChangeLimitRateUp.create = function (value0) {
          return new ChangeLimitRateUp(value0);
      };
      return ChangeLimitRateUp;
  })();
  var ChangeLimitRateDown = (function () {
      function ChangeLimitRateDown(value0) {
          this.value0 = value0;
      };
      ChangeLimitRateDown.create = function (value0) {
          return new ChangeLimitRateDown(value0);
      };
      return ChangeLimitRateDown;
  })();
  var ChangeRpcBindPort = (function () {
      function ChangeRpcBindPort(value0) {
          this.value0 = value0;
      };
      ChangeRpcBindPort.create = function (value0) {
          return new ChangeRpcBindPort(value0);
      };
      return ChangeRpcBindPort;
  })();
  var oneRow = function (x) {
      return React_DOM.div([ React_DOM_Props.className("one column row") ])([ React_DOM.div([ React_DOM_Props.className("column") ])(x) ]);
  };
  var initialState = {
      path: "/usr/bin/monerod", 
      on: false, 
      logPath: Data_Maybe.Nothing.value, 
      dataDirPath: Data_Maybe.Nothing.value, 
      maxConcurrency: Data_Maybe.Nothing.value, 
      enforceDnsCheckpointing: false, 
      limitRate: {
          up: Data_Maybe.Nothing.value, 
          down: Data_Maybe.Nothing.value
      }, 
      rpcBindPort: 18081
  };
  var getValue = function (e) {
      return (Unsafe_Coerce.unsafeCoerce(e)).target.value;
  };
  var getChecked = function (e) {
      return (Unsafe_Coerce.unsafeCoerce(e)).target.checked;
  };
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.div([ React_DOM_Props.className("ui toggle checkbox") ])([ React_DOM.input([ React_DOM_Props._type("checkbox"), React_DOM_Props.onChange(function (e) {
                          return dispatch(ChangeOn.create(getChecked(e)));
                      }), React_DOM_Props.checked(v1.on) ])([  ]), React_DOM.label([  ])([ React_DOM.text("Turn on") ]) ]), React_DOM.div([ React_DOM_Props.className("ui grid segment" + (function () {
                          if (v1.on) {
                              return "";
                          };
                          return " disabled";
                      })()) ])([ oneRow([ React_DOM.h4([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Executable Location") ]), React_DOM.div([ React_DOM_Props.className("ui fluid input") ])([ React_DOM.input([ React_DOM_Props._type("text"), React_DOM_Props.onChange(function (e) {
                          return dispatch(ChangePath.create(getValue(e)));
                      }), React_DOM_Props.value(v1.path) ])([  ]) ]) ]), oneRow([ React_DOM.h4([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Log File Location") ]), React_DOM.div([ React_DOM_Props.className("ui fluid input") ])([ React_DOM.input([ React_DOM_Props._type("text"), React_DOM_Props.onChange(function (e) {
                          return dispatch(ChangeLogPath.create(getValue(e)));
                      }), React_DOM_Props.value(Data_Maybe.fromMaybe("")(v1.logPath)), React_DOM_Props.placeholder("/path/to/logfile.log") ])([  ]) ]) ]), oneRow([ React_DOM.h4([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Data Directory Location") ]), React_DOM.div([ React_DOM_Props.className("ui fluid labeled input") ])([ React_DOM.input([ React_DOM_Props._type("text"), React_DOM_Props.onChange(function (e) {
                          return dispatch(ChangeDataDirPath.create(getValue(e)));
                      }), React_DOM_Props.value(Data_Maybe.fromMaybe("")(v1.dataDirPath)), React_DOM_Props.placeholder("/path/to/monerod/") ])([  ]) ]) ]), oneRow([ React_DOM.h4([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Max Concurrency") ]), React_DOM.div([ React_DOM_Props.className("ui toggle checkbox") ])([ React_DOM.input([ React_DOM_Props._type("checkbox"), React_DOM_Props.onChange(function (e) {
                          var $21 = getChecked(e);
                          if ($21) {
                              return dispatch(ChangeMaxConcurrency.create(new Data_Maybe.Just(1)));
                          };
                          return dispatch(new ChangeMaxConcurrency(Data_Maybe.Nothing.value));
                      }), React_DOM_Props.checked(Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(v1.maxConcurrency)(Data_Maybe.Nothing.value)) ])([  ]), React_DOM.label([  ])([ React_DOM.text("Limit concurrent connections") ]) ]), React_DOM.div([ React_DOM_Props.className("ui fluid input" + (function () {
                          if (v1.maxConcurrency instanceof Data_Maybe.Nothing) {
                              return " disabled";
                          };
                          return "";
                      })()) ])([ React_DOM.input([ React_DOM_Props._type("number"), React_DOM_Props.step("1"), React_DOM_Props.min("1"), React_DOM_Props.value(Data_Show.show(Data_Show.showInt)(Data_Maybe.fromMaybe(1)(v1.maxConcurrency))), React_DOM_Props.onChange(function (e) {
                          return dispatch(ChangeMaxConcurrency.create(Data_Int.fromString(getValue(e))));
                      }) ])([  ]) ]) ]), oneRow([ React_DOM.h4([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Enforce DNS Checkpointing") ]), React_DOM.div([ React_DOM_Props.className("ui toggle checkbox") ])([ React_DOM.input([ React_DOM_Props._type("checkbox"), React_DOM_Props.onChange(function (e) {
                          return dispatch(ChangeEnforceDnsCheckpointing.create(getChecked(e)));
                      }), React_DOM_Props.checked(v1.enforceDnsCheckpointing) ])([  ]), React_DOM.label([  ])([ React_DOM.text("") ]) ]) ]), React_DOM.div([ React_DOM_Props.className("row") ])([ React_DOM.div([ React_DOM_Props.className("sixteen wide column") ])([ React_DOM.h4([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Limit Rate") ]) ]), React_DOM.div([ React_DOM_Props.className("eight wide column") ])([ React_DOM.h5([ React_DOM_Props.className("ui header") ])([ React_DOM.text("Up") ]) ]) ]) ]) ];
                  };
              };
          };
      };
      var performAction = function (action) {
          return function (v) {
              return function (v1) {
                  if (action instanceof ChangePath) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $32 = {};
                          for (var $33 in v2) {
                              if ({}.hasOwnProperty.call(v2, $33)) {
                                  $32[$33] = v2[$33];
                              };
                          };
                          $32.path = action.value0;
                          return $32;
                      }));
                  };
                  if (action instanceof ChangeOn) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $36 = {};
                          for (var $37 in v2) {
                              if ({}.hasOwnProperty.call(v2, $37)) {
                                  $36[$37] = v2[$37];
                              };
                          };
                          $36.on = action.value0;
                          return $36;
                      }));
                  };
                  if (action instanceof ChangeLogPath) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $41 = {};
                          for (var $42 in v2) {
                              if ({}.hasOwnProperty.call(v2, $42)) {
                                  $41[$42] = v2[$42];
                              };
                          };
                          $41.logPath = (function () {
                              var $40 = action.value0 === "";
                              if ($40) {
                                  return Data_Maybe.Nothing.value;
                              };
                              return new Data_Maybe.Just(action.value0);
                          })();
                          return $41;
                      }));
                  };
                  if (action instanceof ChangeDataDirPath) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $46 = {};
                          for (var $47 in v2) {
                              if ({}.hasOwnProperty.call(v2, $47)) {
                                  $46[$47] = v2[$47];
                              };
                          };
                          $46.dataDirPath = (function () {
                              var $45 = action.value0 === "";
                              if ($45) {
                                  return Data_Maybe.Nothing.value;
                              };
                              return new Data_Maybe.Just(action.value0);
                          })();
                          return $46;
                      }));
                  };
                  if (action instanceof ChangeMaxConcurrency) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $50 = {};
                          for (var $51 in v2) {
                              if ({}.hasOwnProperty.call(v2, $51)) {
                                  $50[$51] = v2[$51];
                              };
                          };
                          $50.maxConcurrency = action.value0;
                          return $50;
                      }));
                  };
                  if (action instanceof ChangeEnforceDnsCheckpointing) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $54 = {};
                          for (var $55 in v2) {
                              if ({}.hasOwnProperty.call(v2, $55)) {
                                  $54[$55] = v2[$55];
                              };
                          };
                          $54.enforceDnsCheckpointing = action.value0;
                          return $54;
                      }));
                  };
                  if (action instanceof ChangeLimitRateUp) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (s) {
                          var $61 = {};
                          for (var $62 in s) {
                              if ({}.hasOwnProperty.call(s, $62)) {
                                  $61[$62] = s[$62];
                              };
                          };
                          $61.limitRate = (function () {
                              var $58 = {};
                              for (var $59 in s.limitRate) {
                                  if ({}.hasOwnProperty.call(s.limitRate, $59)) {
                                      $58[$59] = s["limitRate"][$59];
                                  };
                              };
                              $58.up = action.value0;
                              return $58;
                          })();
                          return $61;
                      }));
                  };
                  if (action instanceof ChangeLimitRateDown) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (s) {
                          var $68 = {};
                          for (var $69 in s) {
                              if ({}.hasOwnProperty.call(s, $69)) {
                                  $68[$69] = s[$69];
                              };
                          };
                          $68.limitRate = (function () {
                              var $65 = {};
                              for (var $66 in s.limitRate) {
                                  if ({}.hasOwnProperty.call(s.limitRate, $66)) {
                                      $65[$66] = s["limitRate"][$66];
                                  };
                              };
                              $65.down = action.value0;
                              return $65;
                          })();
                          return $68;
                      }));
                  };
                  if (action instanceof ChangeRpcBindPort) {
                      return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(function (v2) {
                          var $72 = {};
                          for (var $73 in v2) {
                              if ({}.hasOwnProperty.call(v2, $73)) {
                                  $72[$73] = v2[$73];
                              };
                          };
                          $72.rpcBindPort = action.value0;
                          return $72;
                      }));
                  };
                  throw new Error("Failed pattern match at Content.Node line 63, column 32 - line 81, column 53: " + [ action.constructor.name ]);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  exports["ChangePath"] = ChangePath;
  exports["ChangeOn"] = ChangeOn;
  exports["ChangeLogPath"] = ChangeLogPath;
  exports["ChangeDataDirPath"] = ChangeDataDirPath;
  exports["ChangeMaxConcurrency"] = ChangeMaxConcurrency;
  exports["ChangeEnforceDnsCheckpointing"] = ChangeEnforceDnsCheckpointing;
  exports["ChangeLimitRateUp"] = ChangeLimitRateUp;
  exports["ChangeLimitRateDown"] = ChangeLimitRateDown;
  exports["ChangeRpcBindPort"] = ChangeRpcBindPort;
  exports["getChecked"] = getChecked;
  exports["getValue"] = getValue;
  exports["initialState"] = initialState;
  exports["oneRow"] = oneRow;
  exports["spec"] = spec;
})(PS["Content.Node"] = PS["Content.Node"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];        
  var State = (function () {
      function State() {

      };
      State.value = new State();
      return State;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.text("Payment") ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = State.value;
  exports["State"] = State;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Content.Payment"] = PS["Content.Payment"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];        
  var State = (function () {
      function State() {

      };
      State.value = new State();
      return State;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.text("Pool") ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = State.value;
  exports["State"] = State;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Content.Pool"] = PS["Content.Pool"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];        
  var State = (function () {
      function State() {

      };
      State.value = new State();
      return State;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.text("Wallet") ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = State.value;
  exports["State"] = State;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Content.Wallet"] = PS["Content.Wallet"] || {});
(function(exports) {
    "use strict";


  exports.sidebarShow = function sidebarShow () {
    $("#tasks").sidebar('show');
  };

  exports.sidebarHide = function sidebarHide () {
    $("#tasks").sidebar('hide');
  };
})(PS["Template"] = PS["Template"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Template"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Thermite = PS["Thermite"];        
  var ShowSidebar = (function () {
      function ShowSidebar() {

      };
      ShowSidebar.value = new ShowSidebar();
      return ShowSidebar;
  })();
  var Showable = (function () {
      function Showable(value0) {
          this.value0 = value0;
      };
      Showable.create = function (value0) {
          return new Showable(value0);
      };
      return Showable;
  })();
  var HideSidebar = (function () {
      function HideSidebar() {

      };
      HideSidebar.value = new HideSidebar();
      return HideSidebar;
  })();
  var Hideable = (function () {
      function Hideable(value0) {
          this.value0 = value0;
      };
      Hideable.create = function (value0) {
          return new Hideable(value0);
      };
      return Hideable;
  })();
  var ContentAction = (function () {
      function ContentAction(value0) {
          this.value0 = value0;
      };
      ContentAction.create = function (value0) {
          return new ContentAction(value0);
      };
      return ContentAction;
  })();
  var SidebarAction = (function () {
      function SidebarAction(value0) {
          this.value0 = value0;
      };
      SidebarAction.create = function (value0) {
          return new SidebarAction(value0);
      };
      return SidebarAction;
  })();
  var ShowSidebarAction = (function () {
      function ShowSidebarAction() {

      };
      ShowSidebarAction.value = new ShowSidebarAction();
      return ShowSidebarAction;
  })();
  var HideSidebarAction = (function () {
      function HideSidebarAction() {

      };
      HideSidebarAction.value = new HideSidebarAction();
      return HideSidebarAction;
  })();
  var ApplyChangesAction = (function () {
      function ApplyChangesAction() {

      };
      ApplyChangesAction.value = new ApplyChangesAction();
      return ApplyChangesAction;
  })();
  var initialState = function (content) {
      return function (sidebar) {
          return {
              content: content, 
              sidebar: sidebar, 
              changed: false
          };
      };
  };
  var _sidebar = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.sidebar;
      })(function (v) {
          return function (v1) {
              var $27 = {};
              for (var $28 in v) {
                  if ({}.hasOwnProperty.call(v, $28)) {
                      $27[$28] = v[$28];
                  };
              };
              $27.sidebar = v1;
              return $27;
          };
      })(dictStrong);
  };
  var _mkShow = function (p) {
      return function (dictChoice) {
          var make = function (v) {
              if (v instanceof ShowSidebar) {
                  return ShowSidebar.value;
              };
              if (v instanceof Showable) {
                  return new Showable(Data_Lens_Prism.review(Data_Lens_Prism.clonePrism(p)(Data_Lens_Internal_Tagged.taggedChoice))(v.value0));
              };
              throw new Error("Failed pattern match at Template line 95, column 12 - line 97, column 56: " + [ v.constructor.name ]);
          };
          var get = function (v) {
              if (v instanceof ShowSidebar) {
                  return new Data_Maybe.Just(ShowSidebar.value);
              };
              if (v instanceof Showable) {
                  var v1 = Data_Lens_Prism.matching(p)(v.value0);
                  if (v1 instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return new Data_Maybe.Just(new Showable(v1.value0));
                  };
                  throw new Error("Failed pattern match at Template line 102, column 22 - line 104, column 37: " + [ v1.constructor.name ]);
              };
              throw new Error("Failed pattern match at Template line 100, column 11 - line 104, column 37: " + [ v.constructor.name ]);
          };
          return Data_Lens_Prism["prism'"](make)(get)(dictChoice);
      };
  };
  var _content = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.content;
      })(function (v) {
          return function (v1) {
              var $37 = {};
              for (var $38 in v) {
                  if ({}.hasOwnProperty.call(v, $38)) {
                      $37[$38] = v[$38];
                  };
              };
              $37.content = v1;
              return $37;
          };
      })(dictStrong);
  };
  var _Showable = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Showable.create)(function (x) {
          if (x instanceof Showable) {
              return new Data_Maybe.Just(x.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Show = function (dictChoice) {
      var make = function (v) {
          if (v instanceof ShowSidebar) {
              return ShowSidebarAction.value;
          };
          if (v instanceof Showable) {
              return new ContentAction(v.value0);
          };
          throw new Error("Failed pattern match at Template line 76, column 5 - line 76, column 45: " + [ v.constructor.name ]);
      };
      var get = function (v) {
          if (v instanceof ShowSidebarAction) {
              return new Data_Maybe.Just(ShowSidebar.value);
          };
          if (v instanceof ContentAction) {
              return new Data_Maybe.Just(new Showable(v.value0));
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Lens_Prism["prism'"](make)(get)(dictChoice);
  };
  var _Hide = function (dictChoice) {
      var make = function (v) {
          if (v instanceof HideSidebar) {
              return HideSidebarAction.value;
          };
          if (v instanceof Hideable) {
              return new SidebarAction(v.value0);
          };
          throw new Error("Failed pattern match at Template line 86, column 5 - line 86, column 45: " + [ v.constructor.name ]);
      };
      var get = function (v) {
          if (v instanceof HideSidebarAction) {
              return new Data_Maybe.Just(HideSidebar.value);
          };
          if (v instanceof SidebarAction) {
              return new Data_Maybe.Just(new Hideable(v.value0));
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_Lens_Prism["prism'"](make)(get)(dictChoice);
  };
  var spec = function (contentSpec) {
      return function (sidebarSpec) {
          var sidebarSpec$prime = Thermite.focus(function (dictStrong) {
              return _sidebar(dictStrong);
          })(function (dictChoice) {
              return _Hide(dictChoice);
          })(sidebarSpec);
          var contentSpec$prime = Thermite.focus(function (dictStrong) {
              return _content(dictStrong);
          })(function (dictChoice) {
              return _Show(dictChoice);
          })(contentSpec);
          var performAction = function (v) {
              return function (props) {
                  return function (state) {
                      if (v instanceof ShowSidebarAction) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))($foreign.sidebarShow))(function () {
                              return Data_Lens_Getter.viewOn(Data_Semigroup.append(Thermite.semigroupSpec)(contentSpec$prime)(sidebarSpec$prime))(Thermite._performAction(Data_Lens_Internal_Forget.strongForget))(ShowSidebarAction.value)(props)(state);
                          });
                      };
                      if (v instanceof HideSidebarAction) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Free_Trans.monadEffFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadEffAff))($foreign.sidebarHide))(function () {
                              return Data_Lens_Getter.viewOn(Data_Semigroup.append(Thermite.semigroupSpec)(contentSpec$prime)(sidebarSpec$prime))(Thermite._performAction(Data_Lens_Internal_Forget.strongForget))(HideSidebarAction.value)(props)(state);
                          });
                      };
                      return Data_Lens_Getter.viewOn(Data_Semigroup.append(Thermite.semigroupSpec)(contentSpec$prime)(sidebarSpec$prime))(Thermite._performAction(Data_Lens_Internal_Forget.strongForget))(v)(props)(state);
                  };
              };
          };
          var render = function (dispatch) {
              return function (props) {
                  return function (state) {
                      return function (children) {
                          return [ React_DOM.div([ React_DOM_Props.className("ui right sidebar inverted vertical menu"), React_DOM_Props._id("tasks"), React_DOM_Props.style({
                              padding: "1em", 
                              color: "#fff"
                          }) ])(Data_Lens_Getter.viewOn(sidebarSpec$prime)(Thermite._render(Data_Lens_Internal_Forget.strongForget))(dispatch)(props)(state)(children)), React_DOM.div([ React_DOM_Props.className("pusher") ])([ React_DOM.div([ React_DOM_Props.className("ui one column page grid") ])([ React_DOM.div([ React_DOM_Props.className("column") ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ React_DOM.h1([ React_DOM_Props.className("ui dividing header") ])([ React_DOM.text("Monerodo") ]) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Lens_Getter.viewOn(contentSpec$prime)(Thermite._render(Data_Lens_Internal_Forget.strongForget))(dispatch)(props)(state)(children))([ React_DOM.button([ React_DOM_Props.className("ui button primary"), React_DOM_Props.onClick(function (v) {
                              return dispatch(ApplyChangesAction.value);
                          }) ])([ React_DOM.text("Apply Changes") ]) ]))) ]), React_DOM.button([ React_DOM_Props.className("ui orange button"), React_DOM_Props.onClick(function (v) {
                              return dispatch(ShowSidebarAction.value);
                          }), React_DOM_Props.style({
                              position: "fixed", 
                              bottom: 0, 
                              right: 0, 
                              margin: "0.5em"
                          }) ])([ React_DOM.i([ React_DOM_Props.className("icon tasks") ])([  ]), React_DOM.text("Tasks") ]) ]) ];
                      };
                  };
              };
          };
          return Thermite.simpleSpec(performAction)(render);
      };
  };
  exports["ContentAction"] = ContentAction;
  exports["SidebarAction"] = SidebarAction;
  exports["ShowSidebarAction"] = ShowSidebarAction;
  exports["HideSidebarAction"] = HideSidebarAction;
  exports["ApplyChangesAction"] = ApplyChangesAction;
  exports["HideSidebar"] = HideSidebar;
  exports["Hideable"] = Hideable;
  exports["ShowSidebar"] = ShowSidebar;
  exports["Showable"] = Showable;
  exports["_Hide"] = _Hide;
  exports["_Show"] = _Show;
  exports["_Showable"] = _Showable;
  exports["_content"] = _content;
  exports["_mkShow"] = _mkShow;
  exports["_sidebar"] = _sidebar;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Template"] = PS["Template"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Content_Explorer = PS["Content.Explorer"];
  var Content_Mining = PS["Content.Mining"];
  var Content_Node = PS["Content.Node"];
  var Content_Payment = PS["Content.Payment"];
  var Content_Pool = PS["Content.Pool"];
  var Content_Wallet = PS["Content.Wallet"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Template = PS["Template"];
  var Thermite = PS["Thermite"];        
  var NodeState = (function () {
      function NodeState(value0) {
          this.value0 = value0;
      };
      NodeState.create = function (value0) {
          return new NodeState(value0);
      };
      return NodeState;
  })();
  var MiningState = (function () {
      function MiningState(value0) {
          this.value0 = value0;
      };
      MiningState.create = function (value0) {
          return new MiningState(value0);
      };
      return MiningState;
  })();
  var PoolState = (function () {
      function PoolState(value0) {
          this.value0 = value0;
      };
      PoolState.create = function (value0) {
          return new PoolState(value0);
      };
      return PoolState;
  })();
  var WalletState = (function () {
      function WalletState(value0) {
          this.value0 = value0;
      };
      WalletState.create = function (value0) {
          return new WalletState(value0);
      };
      return WalletState;
  })();
  var ExplorerState = (function () {
      function ExplorerState(value0) {
          this.value0 = value0;
      };
      ExplorerState.create = function (value0) {
          return new ExplorerState(value0);
      };
      return ExplorerState;
  })();
  var PaymentState = (function () {
      function PaymentState(value0) {
          this.value0 = value0;
      };
      PaymentState.create = function (value0) {
          return new PaymentState(value0);
      };
      return PaymentState;
  })();
  var NodeAction = (function () {
      function NodeAction(value0) {
          this.value0 = value0;
      };
      NodeAction.create = function (value0) {
          return new NodeAction(value0);
      };
      return NodeAction;
  })();
  var MiningAction = (function () {
      function MiningAction(value0) {
          this.value0 = value0;
      };
      MiningAction.create = function (value0) {
          return new MiningAction(value0);
      };
      return MiningAction;
  })();
  var PoolAction = (function () {
      function PoolAction(value0) {
          this.value0 = value0;
      };
      PoolAction.create = function (value0) {
          return new PoolAction(value0);
      };
      return PoolAction;
  })();
  var WalletAction = (function () {
      function WalletAction(value0) {
          this.value0 = value0;
      };
      WalletAction.create = function (value0) {
          return new WalletAction(value0);
      };
      return WalletAction;
  })();
  var ExplorerAction = (function () {
      function ExplorerAction(value0) {
          this.value0 = value0;
      };
      ExplorerAction.create = function (value0) {
          return new ExplorerAction(value0);
      };
      return ExplorerAction;
  })();
  var PaymentAction = (function () {
      function PaymentAction(value0) {
          this.value0 = value0;
      };
      PaymentAction.create = function (value0) {
          return new PaymentAction(value0);
      };
      return PaymentAction;
  })();
  var _wallet = function (dictChoice) {
      return Data_Lens_Prism["prism'"](WalletState.create)(function (v) {
          if (v instanceof WalletState) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _pool = function (dictChoice) {
      return Data_Lens_Prism["prism'"](PoolState.create)(function (v) {
          if (v instanceof PoolState) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _payment = function (dictChoice) {
      return Data_Lens_Prism["prism'"](PaymentState.create)(function (v) {
          if (v instanceof PaymentState) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _node = function (dictChoice) {
      return Data_Lens_Prism["prism'"](NodeState.create)(function (v) {
          if (v instanceof NodeState) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _mining = function (dictChoice) {
      return Data_Lens_Prism["prism'"](MiningState.create)(function (v) {
          if (v instanceof MiningState) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _explorer = function (dictChoice) {
      return Data_Lens_Prism["prism'"](ExplorerState.create)(function (v) {
          if (v instanceof ExplorerState) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Wallet = function (dictChoice) {
      return Data_Lens_Prism["prism'"](WalletAction.create)(function (v) {
          if (v instanceof WalletAction) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Pool = function (dictChoice) {
      return Data_Lens_Prism["prism'"](PoolAction.create)(function (v) {
          if (v instanceof PoolAction) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Payment = function (dictChoice) {
      return Data_Lens_Prism["prism'"](PaymentAction.create)(function (v) {
          if (v instanceof PaymentAction) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Node = function (dictChoice) {
      return Data_Lens_Prism["prism'"](NodeAction.create)(function (v) {
          if (v instanceof NodeAction) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Mining = function (dictChoice) {
      return Data_Lens_Prism["prism'"](MiningAction.create)(function (v) {
          if (v instanceof MiningAction) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var _Explorer = function (dictChoice) {
      return Data_Lens_Prism["prism'"](ExplorerAction.create)(function (v) {
          if (v instanceof ExplorerAction) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  var spec = (function () {
      var walletSpec = Thermite.split(function (dictChoice) {
          return _wallet(dictChoice);
      })(Thermite.match(function (dictChoice) {
          return function ($60) {
              return Template._mkShow(_Wallet(Data_Lens_Internal_Market.choiceMarket))(dictChoice)(Template._Showable(dictChoice)($60));
          };
      })(Content_Wallet.spec));
      var poolSpec = Thermite.split(function (dictChoice) {
          return _pool(dictChoice);
      })(Thermite.match(function (dictChoice) {
          return function ($61) {
              return Template._mkShow(_Pool(Data_Lens_Internal_Market.choiceMarket))(dictChoice)(Template._Showable(dictChoice)($61));
          };
      })(Content_Pool.spec));
      var paymentSpec = Thermite.split(function (dictChoice) {
          return _payment(dictChoice);
      })(Thermite.match(function (dictChoice) {
          return function ($62) {
              return Template._mkShow(_Payment(Data_Lens_Internal_Market.choiceMarket))(dictChoice)(Template._Showable(dictChoice)($62));
          };
      })(Content_Payment.spec));
      var nodeSpec = Thermite.split(function (dictChoice) {
          return _node(dictChoice);
      })(Thermite.match(function (dictChoice) {
          return function ($63) {
              return Template._mkShow(_Node(Data_Lens_Internal_Market.choiceMarket))(dictChoice)(Template._Showable(dictChoice)($63));
          };
      })(Content_Node.spec));
      var miningSpec = Thermite.split(function (dictChoice) {
          return _mining(dictChoice);
      })(Thermite.match(function (dictChoice) {
          return function ($64) {
              return Template._mkShow(_Mining(Data_Lens_Internal_Market.choiceMarket))(dictChoice)(Template._Showable(dictChoice)($64));
          };
      })(Content_Mining.spec));
      var explorerSpec = Thermite.split(function (dictChoice) {
          return _explorer(dictChoice);
      })(Thermite.match(function (dictChoice) {
          return function ($65) {
              return Template._mkShow(_Explorer(Data_Lens_Internal_Market.choiceMarket))(dictChoice)(Template._Showable(dictChoice)($65));
          };
      })(Content_Explorer.spec));
      var performAction = Data_Lens_Getter.viewOn(Data_Semigroup.append(Thermite.semigroupSpec)(nodeSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(miningSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(poolSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(walletSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(explorerSpec)(paymentSpec))))))(Thermite._performAction(Data_Lens_Internal_Forget.strongForget));
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return Data_Lens_Getter.viewOn(Data_Semigroup.append(Thermite.semigroupSpec)(nodeSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(miningSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(poolSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(walletSpec)(Data_Semigroup.append(Thermite.semigroupSpec)(explorerSpec)(paymentSpec))))))(Thermite._render(Data_Lens_Internal_Forget.strongForget))(dispatch)(props)(state)(children);
                  };
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  exports["NodeAction"] = NodeAction;
  exports["MiningAction"] = MiningAction;
  exports["PoolAction"] = PoolAction;
  exports["WalletAction"] = WalletAction;
  exports["ExplorerAction"] = ExplorerAction;
  exports["PaymentAction"] = PaymentAction;
  exports["NodeState"] = NodeState;
  exports["MiningState"] = MiningState;
  exports["PoolState"] = PoolState;
  exports["WalletState"] = WalletState;
  exports["ExplorerState"] = ExplorerState;
  exports["PaymentState"] = PaymentState;
  exports["_Explorer"] = _Explorer;
  exports["_Mining"] = _Mining;
  exports["_Node"] = _Node;
  exports["_Payment"] = _Payment;
  exports["_Pool"] = _Pool;
  exports["_Wallet"] = _Wallet;
  exports["_explorer"] = _explorer;
  exports["_mining"] = _mining;
  exports["_node"] = _node;
  exports["_payment"] = _payment;
  exports["_pool"] = _pool;
  exports["_wallet"] = _wallet;
  exports["spec"] = spec;
})(PS["Content"] = PS["Content"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };   

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports._insertAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i > l.length) return nothing;
            var l1 = l.slice();
            l1.splice(i, 0, a);
            return just(l1);
          };
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array line 250, column 1 - line 252, column 55: " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var unsnoc = function (xs) {
      return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return function (v1) {
              return {
                  init: v, 
                  last: v1
              };
          };
      })(init(xs)))(last(xs));
  };
  exports["index"] = index;
  exports["init"] = init;
  exports["insertAt"] = insertAt;
  exports["last"] = last;
  exports["mapWithIndex"] = mapWithIndex;
  exports["uncons"] = uncons;
  exports["unsnoc"] = unsnoc;
  exports["drop"] = $foreign.drop;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var toIndex = function (idx) {
      return function (v) {
          if (idx === Data_Array.length(v.prefix)) {
              return v;
          };
          if (idx <= 0) {
              var v1 = Data_Array.uncons(v.prefix);
              if (v1 instanceof Data_Maybe.Just) {
                  return {
                      prefix: [  ], 
                      cursor: v1.value0.head, 
                      suffix: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.tail)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.cursor ])(v.suffix))
                  };
              };
              return v;
          };
          if (idx < Data_Array.length(v.prefix)) {
              var prefix$prime = Data_Array.take(idx)(v.prefix);
              var v1 = Data_Array.uncons(Data_Array.drop(idx)(v.prefix));
              if (v1 instanceof Data_Maybe.Just) {
                  return {
                      prefix: prefix$prime, 
                      cursor: v1.value0.head, 
                      suffix: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.tail)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.cursor ])(v.suffix))
                  };
              };
              return v;
          };
          if (Data_Boolean.otherwise) {
              var sLen = (Data_Array.length(v.prefix) + 1 | 0) + Data_Array.length(v.suffix) | 0;
              var $40 = idx >= sLen;
              if ($40) {
                  var v1 = Data_Array.unsnoc(v.suffix);
                  if (v1 instanceof Data_Maybe.Just) {
                      return {
                          prefix: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.prefix)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.cursor ])(v1.value0.init)), 
                          cursor: v1.value0.last, 
                          suffix: [  ]
                      };
                  };
                  return v;
              };
              var idx$prime = idx - Data_Array.length(v.prefix) | 0;
              var suffix$prime = Data_Array.drop(idx$prime)(v.suffix);
              var v1 = Data_Array.unsnoc(Data_Array.take(idx$prime)(v.suffix));
              if (v1 instanceof Data_Maybe.Just) {
                  return {
                      prefix: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.prefix)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.cursor ])(v1.value0.init)), 
                      cursor: v1.value0.last, 
                      suffix: suffix$prime
                  };
              };
              return v;
          };
          throw new Error("Failed pattern match at Data.Seek line 98, column 1 - line 138, column 29: " + [ idx.constructor.name, v.constructor.name ]);
      };
  };
  var toArray = function (v) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.prefix)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ v.cursor ])(v.suffix));
  };
  var cursorIndex = function (v) {
      return Data_Array.length(v.prefix);
  };
  var _inIndex = function (idx) {
      return function (dictStrong) {
          var set = function (v) {
              return function (x) {
                  if (idx === Data_Array.length(v.prefix)) {
                      return {
                          prefix: v.prefix, 
                          cursor: x, 
                          suffix: v.suffix
                      };
                  };
                  if (idx < Data_Array.length(v.prefix)) {
                      return {
                          prefix: Data_Maybe.fromMaybe(v.prefix)(Data_Array.insertAt(idx)(x)(v.prefix)), 
                          cursor: v.cursor, 
                          suffix: v.suffix
                      };
                  };
                  if (Data_Boolean.otherwise) {
                      return {
                          prefix: v.prefix, 
                          cursor: v.cursor, 
                          suffix: Data_Maybe.fromMaybe(v.suffix)(Data_Array.insertAt(idx - Data_Array.length(v.prefix) | 0)(x)(v.suffix))
                      };
                  };
                  throw new Error("Failed pattern match at Data.Seek line 57, column 5 - line 60, column 122: " + [ v.constructor.name, x.constructor.name ]);
              };
          };
          var get = function (v) {
              if (idx === Data_Array.length(v.prefix)) {
                  return v.cursor;
              };
              if (idx <= 0) {
                  var v1 = Data_Array.uncons(v.prefix);
                  if (v1 instanceof Data_Maybe.Just) {
                      return v1.value0.head;
                  };
                  return v.cursor;
              };
              if (idx < Data_Array.length(v.prefix)) {
                  var v1 = Data_Array.index(v.prefix)(idx);
                  if (v1 instanceof Data_Maybe.Just) {
                      return v1.value0;
                  };
                  return v.cursor;
              };
              if (Data_Boolean.otherwise) {
                  var idx$prime = idx - Data_Array.length(v.prefix) | 0;
                  var v1 = Data_Array.index(v.suffix)(idx$prime);
                  if (v1 instanceof Data_Maybe.Just) {
                      return v1.value0;
                  };
                  return v.cursor;
              };
              throw new Error("Failed pattern match at Data.Seek line 42, column 5 - line 54, column 29: " + [ v.constructor.name ]);
          };
          return Data_Lens_Lens.lens(get)(set)(dictStrong);
      };
  };
  exports["_inIndex"] = _inIndex;
  exports["cursorIndex"] = cursorIndex;
  exports["toArray"] = toArray;
  exports["toIndex"] = toIndex;
})(PS["Data.Seek"] = PS["Data.Seek"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Seek = PS["Data.Seek"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Template = PS["Template"];
  var Thermite = PS["Thermite"];        
  var ClickedTab = (function () {
      function ClickedTab(value0) {
          this.value0 = value0;
      };
      ClickedTab.create = function (value0) {
          return new ClickedTab(value0);
      };
      return ClickedTab;
  })();
  var PageAction = (function () {
      function PageAction(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PageAction.create = function (value0) {
          return function (value1) {
              return new PageAction(value0, value1);
          };
      };
      return PageAction;
  })();
  var _inPageIndex = function (idx) {
      return function (dictStrong) {
          var pageLens = Data_Lens_Lens.lens(function (v) {
              return v.page;
          })(function (v) {
              return function (v1) {
                  var $19 = {};
                  for (var $20 in v) {
                      if ({}.hasOwnProperty.call(v, $20)) {
                          $19[$20] = v[$20];
                      };
                  };
                  $19.page = v1;
                  return $19;
              };
          });
          return function ($46) {
              return Data_Seek._inIndex(idx)(dictStrong)(pageLens(dictStrong)($46));
          };
      };
  };
  var _PageAction$prime = function (idx) {
      return function (dictChoice) {
          var make = function (v) {
              if (v instanceof Template.ShowSidebar) {
                  return Template.ShowSidebar.value;
              };
              if (v instanceof Template.Showable) {
                  return new Template.Showable(new PageAction(idx, v.value0));
              };
              throw new Error("Failed pattern match at Tabular line 39, column 5 - line 39, column 35: " + [ v.constructor.name ]);
          };
          var get = function (v) {
              if (v instanceof Template.ShowSidebar) {
                  return new Data_Maybe.Just(Template.ShowSidebar.value);
              };
              if (v instanceof Template.Showable && v.value0 instanceof PageAction) {
                  if (idx === v.value0.value0) {
                      return new Data_Maybe.Just(new Template.Showable(v.value0.value1));
                  };
                  if (Data_Boolean.otherwise) {
                      return Data_Maybe.Nothing.value;
                  };
              };
              return Data_Maybe.Nothing.value;
          };
          return Data_Lens_Prism["prism'"](make)(get)(dictChoice);
      };
  };
  var spec = function (pageSpec) {
      var render = function (dispatch) {
          return function (props) {
              return function (state) {
                  return function (children) {
                      return [ React_DOM.div([ React_DOM_Props.className("ui top attached tabular menu") ])(Data_Array.mapWithIndex(function (idx) {
                          return function (v) {
                              return React_DOM.a([ React_DOM_Props.className("item" + (function () {
                                  var $29 = idx === Data_Seek.cursorIndex(state);
                                  if ($29) {
                                      return " active";
                                  };
                                  return "";
                              })()), React_DOM_Props.onClick(function (v1) {
                                  return dispatch(Template.Showable.create(new ClickedTab(idx)));
                              }) ])([ React_DOM.text(v.label) ]);
                          };
                      })(Data_Seek.toArray(state))), React_DOM.div([ React_DOM_Props.className("ui bottom attached segment") ])((function () {
                          var idx = Data_Seek.cursorIndex(state);
                          var pageSpec$prime = Thermite.focus(function (dictStrong) {
                              return _inPageIndex(idx)(dictStrong);
                          })(function (dictChoice) {
                              return _PageAction$prime(idx)(dictChoice);
                          })(pageSpec);
                          return Data_Lens_Getter.viewOn(pageSpec$prime)(Thermite._render(Data_Lens_Internal_Forget.strongForget))(dispatch)(props)(state)(children);
                      })()) ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  if (v instanceof Template.Showable) {
                      if (v.value0 instanceof ClickedTab) {
                          return Data_Functor["void"](Control_Monad_Free_Trans.functorFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.functorAff))(Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(Data_Seek.toIndex(v.value0.value0)));
                      };
                      if (v.value0 instanceof PageAction) {
                          var pageSpec$prime = Thermite.focus(function (dictStrong) {
                              return _inPageIndex(v.value0.value0)(dictStrong);
                          })(function (dictChoice) {
                              return _PageAction$prime(v.value0.value0)(dictChoice);
                          })(pageSpec);
                          return Data_Lens_Getter.viewOn(pageSpec$prime)(Thermite._performAction(Data_Lens_Internal_Forget.strongForget))(new Template.Showable(v.value0))(v1)(v2);
                      };
                      throw new Error("Failed pattern match at Tabular line 62, column 46 - line 67, column 69: " + [ v.value0.constructor.name ]);
                  };
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  };
  exports["ClickedTab"] = ClickedTab;
  exports["PageAction"] = PageAction;
  exports["_inPageIndex"] = _inPageIndex;
  exports["spec"] = spec;
})(PS["Tabular"] = PS["Tabular"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Template = PS["Template"];
  var Thermite = PS["Thermite"];        
  var State = (function () {
      function State() {

      };
      State.value = new State();
      return State;
  })();
  var spec = (function () {
      var render = function (dispatch) {
          return function (v) {
              return function (v1) {
                  return function (v2) {
                      return [ React_DOM.h2([ React_DOM_Props.className("ui dividing header"), React_DOM_Props.style({
                          color: "#fff", 
                          borderBottom: "1px solid white"
                      }) ])([ React_DOM.text("Tasks") ]), React_DOM.button([ React_DOM_Props.className("ui button"), React_DOM_Props.onClick(function (v3) {
                          return dispatch(Template.HideSidebar.value);
                      }) ])([ React_DOM.text("Hide Sidebar") ]) ];
                  };
              };
          };
      };
      var performAction = function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
              };
          };
      };
      return Thermite.simpleSpec(performAction)(render);
  })();
  var initialState = State.value;
  exports["State"] = State;
  exports["initialState"] = initialState;
  exports["spec"] = spec;
})(PS["Tasks"] = PS["Tasks"] || {});
(function(exports) {
  // Generated by purs version 0.11.5
  "use strict";
  var Content = PS["Content"];
  var Content_Explorer = PS["Content.Explorer"];
  var Content_Mining = PS["Content.Mining"];
  var Content_Node = PS["Content.Node"];
  var Content_Payment = PS["Content.Payment"];
  var Content_Pool = PS["Content.Pool"];
  var Content_Wallet = PS["Content.Wallet"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var DOM = PS["DOM"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Seek = PS["Data.Seek"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var React = PS["React"];
  var React_DOM = PS["React.DOM"];
  var React_DOM_Props = PS["React.DOM.Props"];
  var ReactDOM = PS["ReactDOM"];
  var Tabular = PS["Tabular"];
  var Tasks = PS["Tasks"];
  var Template = PS["Template"];
  var Thermite = PS["Thermite"];        
  var TemplateAction = (function () {
      function TemplateAction(value0) {
          this.value0 = value0;
      };
      TemplateAction.create = function (value0) {
          return new TemplateAction(value0);
      };
      return TemplateAction;
  })();
  var initialState = (function () {
      var tabs = {
          prefix: [  ], 
          cursor: {
              label: "Node", 
              page: new Content.NodeState(Content_Node.initialState)
          }, 
          suffix: [ {
              label: "Mining", 
              page: new Content.MiningState(Content_Mining.initialState)
          }, {
              label: "Pool", 
              page: new Content.PoolState(Content_Pool.initialState)
          }, {
              label: "Wallet", 
              page: new Content.WalletState(Content_Wallet.initialState)
          }, {
              label: "Explorer", 
              page: new Content.ExplorerState(Content_Explorer.initialState)
          }, {
              label: "Payment", 
              page: new Content.PaymentState(Content_Payment.initialState)
          } ]
      };
      return {
          template: Template.initialState(tabs)(Tasks.initialState)
      };
  })();
  var _template = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.template;
      })(function (v) {
          return function (v1) {
              var $8 = {};
              for (var $9 in v) {
                  if ({}.hasOwnProperty.call(v, $9)) {
                      $8[$9] = v[$9];
                  };
              };
              $8.template = v1;
              return $8;
          };
      })(dictStrong);
  };
  var _TemplateAction = function (dictChoice) {
      var get = function (v) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Lens_Prism["prism'"](TemplateAction.create)(get)(dictChoice);
  };
  var spec = Thermite.focus(function (dictStrong) {
      return _template(dictStrong);
  })(function (dictChoice) {
      return _TemplateAction(dictChoice);
  })(Template.spec(Tabular.spec(Content.spec))(Tasks.spec));
  var main = function __do() {
      Control_Monad_Eff_Console.log("Hello sailor!")();
      return Thermite.defaultMain(spec)(initialState)(Data_Unit.unit)();
  };
  exports["TemplateAction"] = TemplateAction;
  exports["_TemplateAction"] = _TemplateAction;
  exports["_template"] = _template;
  exports["initialState"] = initialState;
  exports["main"] = main;
  exports["spec"] = spec;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();