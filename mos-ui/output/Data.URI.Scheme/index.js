// Generated by purs version 0.11.6
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Data_URI_Common = require("../Data.URI.Common");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Text_Parsing_StringParser_String = require("../Text.Parsing.StringParser.String");
var Scheme = function (x) {
    return x;
};
var print = function (v) {
    return v + ":";
};
var parser = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Scheme)(Data_URI_Common.rxPat("[a-z][a-z0-9+\\.\\-]+")))(Text_Parsing_StringParser_String.string(":"));
var ordScheme = Data_Ord.ordString;
var newtypeScheme = new Data_Newtype.Newtype(function (n) {
    return n;
}, Scheme);
var genericScheme = new Data_Generic_Rep.Generic(function (x) {
    return x;
}, function (x) {
    return x;
});
var showScheme = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericScheme)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "Scheme";
}))));
var eqScheme = Data_Eq.eqString;
module.exports = {
    Scheme: Scheme, 
    parser: parser, 
    print: print, 
    eqScheme: eqScheme, 
    ordScheme: ordScheme, 
    genericScheme: genericScheme, 
    newtypeScheme: newtypeScheme, 
    showScheme: showScheme
};
