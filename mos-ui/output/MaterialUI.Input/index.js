// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Monad_Eff_Uncurried = require("../Control.Monad.Eff.Uncurried");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var DOM_Node_Types = require("../DOM.Node.Types");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Record_Class = require("../Data.Record.Class");
var MaterialUI_Types = require("../MaterialUI.Types");
var Prelude = require("../Prelude");
var React = require("../React");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var ValueInt = (function () {
    function ValueInt(value0) {
        this.value0 = value0;
    };
    ValueInt.create = function (value0) {
        return new ValueInt(value0);
    };
    return ValueInt;
})();
var ValueNumber = (function () {
    function ValueNumber(value0) {
        this.value0 = value0;
    };
    ValueNumber.create = function (value0) {
        return new ValueNumber(value0);
    };
    return ValueNumber;
})();
var ValueString = (function () {
    function ValueString(value0) {
        this.value0 = value0;
    };
    ValueString.create = function (value0) {
        return new ValueString(value0);
    };
    return ValueString;
})();
var Margin = function (x) {
    return x;
};
var InputType = function (x) {
    return x;
};
var weekType = "week";
var valueString = Unsafe_Coerce.unsafeCoerce;
var valueNumber = Unsafe_Coerce.unsafeCoerce;
var valueNull = Data_Nullable.toNullable(Data_Maybe.Nothing.value);
var valueInt = Unsafe_Coerce.unsafeCoerce;
var urlType = "url";
var timeType = "time";
var textType = "text";
var telType = "tel";
var submitType = "submit";
var searchType = "search";
var resetType = "reset";
var readValue = function (v) {
    return Control_Monad_Except.runExcept((function () {
        var v$prime = Data_Foreign.toForeign(v);
        return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(ValueInt.create)(Data_Foreign.readInt(v$prime)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(ValueNumber.create)(Data_Foreign.readNumber(v$prime))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(ValueString.create)(Data_Foreign.readString(v$prime)));
    })());
};
var rangeType = "range";
var radioType = "radio";
var passwordType = "password";
var numberType = "number";
var none = "none";
var monthType = "month";
var inputLabel = function (dictSubrow) {
    return React.createElement($foreign.inputLabelImpl);
};
var input = function (dictSubrow) {
    return React.createElement($foreign.inputImpl);
};
var imageType = "image";
var hiddenType = "hidden";
var fileType = "file";
var emailType = "email";
var dense = "dense";
var datetimeLocalType = "datetime-local";
var dateType = "date";
var createClassesLabel = function (dictSubrow) {
    return Unsafe_Coerce.unsafeCoerce;
};
var createClasses = function (dictSubrow) {
    return Unsafe_Coerce.unsafeCoerce;
};
var colorType = "color";
var checkboxType = "checkbox";
var buttonType = "button";
module.exports = {
    input: input,
    valueInt: valueInt,
    valueNumber: valueNumber,
    valueString: valueString,
    valueNull: valueNull,
    ValueInt: ValueInt,
    ValueNumber: ValueNumber,
    ValueString: ValueString,
    readValue: readValue,
    dense: dense,
    none: none,
    textType: textType,
    buttonType: buttonType,
    checkboxType: checkboxType,
    colorType: colorType,
    dateType: dateType,
    datetimeLocalType: datetimeLocalType,
    emailType: emailType,
    fileType: fileType,
    hiddenType: hiddenType,
    imageType: imageType,
    monthType: monthType,
    numberType: numberType,
    passwordType: passwordType,
    radioType: radioType,
    rangeType: rangeType,
    resetType: resetType,
    searchType: searchType,
    submitType: submitType,
    telType: telType,
    timeType: timeType,
    urlType: urlType,
    weekType: weekType,
    createClasses: createClasses,
    inputLabel: inputLabel,
    createClassesLabel: createClassesLabel
};
