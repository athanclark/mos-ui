// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Generic_Rep = require("../Data.Generic.Rep");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Data_URI_Common = require("../Data.URI.Common");
var Global = require("../Global");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Port = function (x) {
    return x;
};
var print = function (v) {
    return Data_Show.show(Data_Show.showInt)(v);
};
var parser = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_URI_Common.rxPat("[0-9]+"))(function (v) {
    var v1 = Data_Int.fromNumber(Global.readInt(10)(v));
    if (v1 instanceof Data_Maybe.Just) {
        return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(v1.value0);
    };
    return Text_Parsing_StringParser.fail("Expected valid port number");
});
var ordPort = Data_Ord.ordInt;
var newtypePort = new Data_Newtype.Newtype(function (n) {
    return n;
}, Port);
var genericPort = new Data_Generic_Rep.Generic(function (x) {
    return x;
}, function (x) {
    return x;
});
var showPort = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericPort)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showInt))(new Data_Symbol.IsSymbol(function () {
    return "Port";
}))));
var eqPort = Data_Eq.eqInt;
module.exports = {
    Port: Port,
    parser: parser,
    print: print,
    eqPort: eqPort,
    ordPort: ordPort,
    genericPort: genericPort,
    newtypePort: newtypePort,
    showPort: showPort
};
