// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Argonaut = require("../Data.Argonaut");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class");
var Data_Argonaut_Decode_Combinators = require("../Data.Argonaut.Decode.Combinators");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class");
var Data_Argonaut_Encode_Combinators = require("../Data.Argonaut.Encode.Combinators");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Data_URI_Authority = require("../Data.URI.Authority");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var INC = (function () {
    function INC() {

    };
    INC.value = new INC();
    return INC;
})();
var OUT = (function () {
    function OUT() {

    };
    OUT.value = new OUT();
    return OUT;
})();
var SyncProgress = (function () {
    function SyncProgress(value0) {
        this.value0 = value0;
    };
    SyncProgress.create = function (value0) {
        return new SyncProgress(value0);
    };
    return SyncProgress;
})();
var SyncNewTopBlock = (function () {
    function SyncNewTopBlock(value0) {
        this.value0 = value0;
    };
    SyncNewTopBlock.create = function (value0) {
        return new SyncNewTopBlock(value0);
    };
    return SyncNewTopBlock;
})();
var MoneroDOther = (function () {
    function MoneroDOther(value0) {
        this.value0 = value0;
    };
    MoneroDOther.create = function (value0) {
        return new MoneroDOther(value0);
    };
    return MoneroDOther;
})();
var encodeJsonSyncPolarity = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
    if (v instanceof INC) {
        return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("INC");
    };
    if (v instanceof OUT) {
        return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("OUT");
    };
    throw new Error("Failed pattern match at Monerodo.MoneroD line 97, column 1 - line 97, column 59: " + [ v.constructor.name ]);
});
var encodeJsonMoneroDLog = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
    if (v instanceof MoneroDOther) {
        return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)("");
    };
    if (v instanceof SyncNewTopBlock) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("host")(Data_String.drop(2)(Data_URI_Authority.print(v.value0.host))))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(encodeJsonSyncPolarity)("polarity")(v.value0.polarity))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("peer")(v.value0.peer))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("top")(v.value0.top))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("current")(v.value0.current))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("behind")(v.value0.behind))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("days")(v.value0.days))(Data_Argonaut_Core.jsonEmptyObject)))))));
    };
    if (v instanceof SyncProgress) {
        return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("amount")(v.value0.amount))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("total")(v.value0.total))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("host")(Data_String.drop(2)(Data_URI_Authority.print(v.value0.host))))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("peer")(v.value0.peer))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(encodeJsonSyncPolarity)("polarity")(v.value0.polarity))(Data_Argonaut_Core.jsonEmptyObject)))));
    };
    throw new Error("Failed pattern match at Monerodo.MoneroD line 32, column 1 - line 32, column 55: " + [ v.constructor.name ]);
});
var decodeJsonSyncPolarity = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json))(function (v) {
        if (v === "INC") {
            return Control_Applicative.pure(Data_Either.applicativeEither)(INC.value);
        };
        if (v === "OUT") {
            return Control_Applicative.pure(Data_Either.applicativeEither)(OUT.value);
        };
        if (Data_Boolean.otherwise) {
            return new Data_Either.Left("Not a SyncPolarity");
        };
        throw new Error("Failed pattern match at Monerodo.MoneroD line 104, column 5 - line 107, column 29: " + [ v.constructor.name ]);
    });
});
var decodeJsonMoneroDLog = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
    var parseProgress = function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(o)("progress"))(function (v) {
            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("amount"))(function (v1) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("total"))(function (v2) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("host"))(function (v3) {
                        return Control_Bind.bind(Data_Either.bindEither)((function () {
                            var v4 = Text_Parsing_StringParser.runParser(Data_URI_Authority.parser)("//" + v3);
                            if (v4 instanceof Data_Either.Left) {
                                return new Data_Either.Left(Data_Show.show(Text_Parsing_StringParser.showParseError)(v4.value0));
                            };
                            if (v4 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(v4.value0);
                            };
                            throw new Error("Failed pattern match at Monerodo.MoneroD line 61, column 17 - line 63, column 28: " + [ v4.constructor.name ]);
                        })())(function (v4) {
                            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("peer"))(function (v5) {
                                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonSyncPolarity)(v)("polarity"))(function (v6) {
                                    return Control_Applicative.pure(Data_Either.applicativeEither)(new SyncProgress({
                                        amount: v1, 
                                        host: v4, 
                                        total: v2, 
                                        peer: v5, 
                                        polarity: v6
                                    }));
                                });
                            });
                        });
                    });
                });
            });
        });
    };
    var parseNewTopBlock = function (o) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(o)("newTopBlock"))(function (v) {
            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("top"))(function (v1) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("peer"))(function (v2) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("host"))(function (v3) {
                        return Control_Bind.bind(Data_Either.bindEither)((function () {
                            var v4 = Text_Parsing_StringParser.runParser(Data_URI_Authority.parser)("//" + v3);
                            if (v4 instanceof Data_Either.Left) {
                                return new Data_Either.Left(Data_Show.show(Text_Parsing_StringParser.showParseError)(v4.value0));
                            };
                            if (v4 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(Data_Either.applicativeEither)(v4.value0);
                            };
                            throw new Error("Failed pattern match at Monerodo.MoneroD line 78, column 17 - line 80, column 28: " + [ v4.constructor.name ]);
                        })())(function (v4) {
                            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("days"))(function (v5) {
                                return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("behind"))(function (v6) {
                                    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(v)("current"))(function (v7) {
                                        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(decodeJsonSyncPolarity)(v)("polarity"))(function (v8) {
                                            return Control_Applicative.pure(Data_Either.applicativeEither)(new SyncNewTopBlock({
                                                polarity: v8, 
                                                current: v7, 
                                                behind: v6, 
                                                days: v5, 
                                                host: v4, 
                                                peer: v2, 
                                                top: v1
                                            }));
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    };
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
        return Control_Alt.alt(Data_Either.altEither)(parseProgress(v))(parseNewTopBlock(v));
    });
});
module.exports = {
    SyncProgress: SyncProgress, 
    SyncNewTopBlock: SyncNewTopBlock, 
    MoneroDOther: MoneroDOther, 
    INC: INC, 
    OUT: OUT, 
    encodeJsonMoneroDLog: encodeJsonMoneroDLog, 
    decodeJsonMoneroDLog: decodeJsonMoneroDLog, 
    encodeJsonSyncPolarity: encodeJsonSyncPolarity, 
    decodeJsonSyncPolarity: decodeJsonSyncPolarity
};
