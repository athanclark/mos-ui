// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Coroutine = require("../Control.Coroutine");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_Free_Trans = require("../Control.Monad.Free.Trans");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var DOM = require("../DOM");
var DOM_HTML = require("../DOM.HTML");
var DOM_HTML_Document = require("../DOM.HTML.Document");
var DOM_HTML_Types = require("../DOM.HTML.Types");
var DOM_HTML_Window = require("../DOM.HTML.Window");
var Data_Either = require("../Data.Either");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Lens = require("../Data.Lens");
var Data_Lens_Fold = require("../Data.Lens.Fold");
var Data_Lens_Getter = require("../Data.Lens.Getter");
var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget");
var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market");
var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged");
var Data_Lens_Lens = require("../Data.Lens.Lens");
var Data_Lens_Prism = require("../Data.Lens.Prism");
var Data_Lens_Setter = require("../Data.Lens.Setter");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var React = require("../React");
var React_DOM = require("../React.DOM");
var ReactDOM = require("../ReactDOM");
var Spec = function (x) {
    return x;
};
var writeState = function (st) {
    return Control_Coroutine.cotransform(Control_Monad_Aff.monadAff)(Data_Function["const"](st));
};
var split = function (prism) {
    return function (v) {
        var render = function (k) {
            return function (p) {
                return function (st) {
                    return function (children) {
                        var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(st);
                        if (v1 instanceof Data_Either.Left) {
                            return [  ];
                        };
                        if (v1 instanceof Data_Either.Right) {
                            return v.render(k)(p)(v1.value0)(children);
                        };
                        throw new Error("Failed pattern match at Thermite line 373, column 7 - line 375, column 50: " + [ v1.constructor.name ]);
                    };
                };
            };
        };
        var performAction = function (a) {
            return function (p) {
                return function (st) {
                    var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(st);
                    if (v1 instanceof Data_Either.Left) {
                        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                    };
                    if (v1 instanceof Data_Either.Right) {
                        return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(function (v2) {
                            return Control_Bind.bind(Data_Maybe.bindMaybe)(v2)(Data_Lens_Fold.preview(prism(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst))));
                        })))(v.performAction(a)(p)(v1.value0)))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Lens_Setter.over(prism(Data_Profunctor_Choice.choiceFn)))));
                    };
                    throw new Error("Failed pattern match at Thermite line 365, column 7 - line 369, column 78: " + [ v1.constructor.name ]);
                };
            };
        };
        return {
            performAction: performAction, 
            render: render
        };
    };
};
var simpleSpec = function (performAction) {
    return function (render) {
        return {
            performAction: performAction, 
            render: render
        };
    };
};
var semigroupSpec = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return {
            performAction: function (a) {
                return function (p) {
                    return function (s) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(v.performAction(a)(p)(s))(function () {
                            return v1.performAction(a)(p)(s);
                        });
                    };
                };
            }, 
            render: function (k) {
                return function (p) {
                    return function (s) {
                        return Data_Semigroup.append(Data_Semigroup.semigroupFn(Data_Semigroup.semigroupArray))(v.render(k)(p)(s))(v1.render(k)(p)(s));
                    };
                };
            }
        };
    };
});
var monoidSpec = new Data_Monoid.Monoid(function () {
    return semigroupSpec;
}, simpleSpec(function (v) {
    return function (v1) {
        return function (v2) {
            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
        };
    };
})(function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                return [  ];
            };
        };
    };
}));
var modifyState = Control_Coroutine.cotransform(Control_Monad_Aff.monadAff);
var foreach = function (f) {
    var performAction = function (v) {
        return function (p) {
            return function (sts) {
                var modifying = function (j) {
                    return function (g) {
                        return function (sts$prime) {
                            return Data_Maybe.fromMaybe(sts$prime)(Data_List.modifyAt(j)(g)(sts$prime));
                        };
                    };
                };
                return Data_Foldable.for_(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Foldable.foldableMaybe)(Data_List.index(sts)(v.value0))(function (st) {
                    var v1 = f(v.value0);
                    return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(function (v2) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(v2)(function (v3) {
                            return Data_List.index(v3)(v.value0);
                        });
                    })))(v1.performAction(v.value1)(p)(st)))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(modifying(v.value0))));
                });
            };
        };
    };
    var foldWithIndex = function (g) {
        var go = function ($copy_v) {
            return function ($copy_v1) {
                return function ($copy_r) {
                    var $tco_var_v = $copy_v;
                    var $tco_var_v1 = $copy_v1;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1, r) {
                        if (v1 instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return r;
                        };
                        if (v1 instanceof Data_List_Types.Cons) {
                            $tco_var_v = v + 1 | 0;
                            $tco_var_v1 = v1.value1;
                            $copy_r = g(v)(v1.value0)(r);
                            return;
                        };
                        throw new Error("Failed pattern match at Thermite line 408, column 7 - line 408, column 29: " + [ v.constructor.name, v1.constructor.name, r.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_r);
                    };
                    return $tco_result;
                };
            };
        };
        return go(0);
    };
    var render = function (k) {
        return function (p) {
            return function (sts) {
                return function (v) {
                    return foldWithIndex(function (i) {
                        return function (st) {
                            return function (els) {
                                var v1 = f(i);
                                return Data_Semigroup.append(Data_Semigroup.semigroupArray)(els)(v1.render(function ($105) {
                                    return k(Data_Tuple.Tuple.create(i)($105));
                                })(p)(st)([  ]));
                            };
                        };
                    })(sts)([  ]);
                };
            };
        };
    };
    return {
        performAction: performAction, 
        render: render
    };
};
var focus = function (lens) {
    return function (prism) {
        return function (v) {
            var render = function (k) {
                return function (p) {
                    return function (st) {
                        return v.render(function ($106) {
                            return k(Data_Lens_Prism.review(prism(Data_Lens_Internal_Tagged.taggedChoice))($106));
                        })(p)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(st));
                    };
                };
            };
            var performAction = function (a) {
                return function (p) {
                    return function (st) {
                        var v1 = Data_Lens_Prism.matching(prism(Data_Lens_Internal_Market.choiceMarket))(a);
                        if (v1 instanceof Data_Either.Left) {
                            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
                        };
                        if (v1 instanceof Data_Either.Right) {
                            return Control_Coroutine.transformCoTransformR(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Coroutine.transformCoTransformL(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelAff)(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))))))(v.performAction(v1.value0)(p)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(st))))(Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorTransform)(Control_Monad_Aff.monadAff))(Control_Coroutine.transform(Control_Monad_Aff.monadAff)(Data_Lens_Setter.over(lens(Data_Profunctor_Strong.strongFn)))));
                        };
                        throw new Error("Failed pattern match at Thermite line 329, column 7 - line 333, column 76: " + [ v1.constructor.name ]);
                    };
                };
            };
            return {
                performAction: performAction, 
                render: render
            };
        };
    };
};
var focusState = function (lens) {
    return focus(function (dictStrong) {
        return lens(dictStrong);
    })(function (dictChoice) {
        return Control_Category.id(Control_Category.categoryFn);
    });
};
var match = function (prism) {
    return focus(function (dictStrong) {
        return Control_Category.id(Control_Category.categoryFn);
    })(function (dictChoice) {
        return prism(dictChoice);
    });
};
var defaultRender = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                return [  ];
            };
        };
    };
};
var defaultPerformAction = function (v) {
    return function (v1) {
        return function (v2) {
            return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadAff))(Data_Unit.unit);
        };
    };
};
var createReactSpec$prime = function (wrap) {
    return function (v) {
        var dispatcher = function ($$this) {
            return function (action) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var v1 = React.getProps($$this)();
                    var v2 = React.readState($$this)();
                    var cotransformer = v.performAction(action)(v1)(v2);
                    var step = function (cot) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free_Trans.resume(Control_Coroutine.functorCoTransform)(Control_Monad_Aff.monadRecAff)(cot))(function (v3) {
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Done(Data_Unit.unit));
                            };
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(React.readState($$this))))(function (v4) {
                                    var newState = v3.value0.value0(v4);
                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.makeAff(function (cb) {
                                        return Control_Monad_Eff_Unsafe.unsafeCoerceEff(function __do() {
                                            Data_Functor["void"](Control_Monad_Eff.functorEff)(React.writeStateWithCallback($$this)(newState)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(cb(new Data_Either.Right(newState)))))();
                                            return Control_Monad_Aff.nonCanceler;
                                        });
                                    }))(function (v5) {
                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Control_Monad_Rec_Class.Loop(v3.value0.value1(new Data_Maybe.Just(newState))));
                                    });
                                });
                            };
                            throw new Error("Failed pattern match at Thermite line 251, column 13 - line 259, column 48: " + [ v3.constructor.name ]);
                        });
                    };
                    return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Aff.launchAff(Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(step)(cotransformer)))();
                });
            };
        };
        var render = function ($$this) {
            return Data_Functor.map(Control_Monad_Eff.functorEff)(wrap)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Control_Apply.apply(Control_Monad_Eff.applyEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(v.render(dispatcher($$this)))(React.getProps($$this)))(React.readState($$this)))(React.getChildren($$this)));
        };
        return function (state) {
            return {
                spec: React.spec(state)(render), 
                dispatcher: dispatcher
            };
        };
    };
};
var createReactSpec = createReactSpec$prime(React_DOM["div'"]);
var createClass = function (spec) {
    return function (state) {
        return React.createClass((function (v) {
            return v.spec;
        })(createReactSpec(spec)(state)));
    };
};
var defaultMain = function (spec) {
    return function (initialState) {
        return function (props) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)((function () {
                var component = createClass(spec)(initialState);
                return function __do() {
                    var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document)();
                    var v1 = DOM_HTML_Document.body(v)();
                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($107) {
                        return ReactDOM.render(React.createFactory(component)(props))(DOM_HTML_Types.htmlElementToElement($107));
                    })(v1)();
                };
            })());
        };
    };
};
var cmapProps = function (f) {
    return function (v) {
        var render = function (a) {
            return function ($108) {
                return v.render(a)(f($108));
            };
        };
        var performAction = function (a) {
            return function ($109) {
                return v.performAction(a)(f($109));
            };
        };
        return {
            performAction: performAction, 
            render: render
        };
    };
};
var _render = function (dictStrong) {
    return Data_Lens_Lens.lens(function (v) {
        return v.render;
    })(function (v) {
        return function (r) {
            var $97 = {};
            for (var $98 in v) {
                if ({}.hasOwnProperty.call(v, $98)) {
                    $97[$98] = v[$98];
                };
            };
            $97.render = r;
            return $97;
        };
    })(dictStrong);
};
var _performAction = function (dictStrong) {
    return Data_Lens_Lens.lens(function (v) {
        return v.performAction;
    })(function (v) {
        return function (pa) {
            var $102 = {};
            for (var $103 in v) {
                if ({}.hasOwnProperty.call(v, $103)) {
                    $102[$103] = v[$103];
                };
            };
            $102.performAction = pa;
            return $102;
        };
    })(dictStrong);
};
var withState = function (f) {
    var render = function (k) {
        return function (p) {
            return function (st) {
                return Data_Lens_Getter.view(_render(Data_Lens_Internal_Forget.strongForget))(f(st))(k)(p)(st);
            };
        };
    };
    var performAction = function (a) {
        return function (p) {
            return function (st) {
                return Data_Lens_Getter.view(_performAction(Data_Lens_Internal_Forget.strongForget))(f(st))(a)(p)(st);
            };
        };
    };
    return simpleSpec(performAction)(render);
};
module.exports = {
    _performAction: _performAction, 
    _render: _render, 
    cmapProps: cmapProps, 
    createClass: createClass, 
    createReactSpec: createReactSpec, 
    "createReactSpec'": createReactSpec$prime, 
    defaultMain: defaultMain, 
    defaultPerformAction: defaultPerformAction, 
    defaultRender: defaultRender, 
    focus: focus, 
    focusState: focusState, 
    foreach: foreach, 
    match: match, 
    modifyState: modifyState, 
    simpleSpec: simpleSpec, 
    split: split, 
    withState: withState, 
    writeState: writeState, 
    semigroupSpec: semigroupSpec, 
    monoidSpec: monoidSpec
};
